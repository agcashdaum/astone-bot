[{"/Users/guglielmino/Sources/my/astone-bot/server/app.commands.js":"1","/Users/guglielmino/Sources/my/astone-bot/server/app.js":"2","/Users/guglielmino/Sources/my/astone-bot/server/astone-cli.js":"3","/Users/guglielmino/Sources/my/astone-bot/server/bot-api/messenger.js":"4","/Users/guglielmino/Sources/my/astone-bot/server/bot-api/msg-builder.js":"5","/Users/guglielmino/Sources/my/astone-bot/server/bot-api/telegram.js":"6","/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/auction-property.js":"7","/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/bid.cmd.js":"8","/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/start-auction.cmd.js":"9","/Users/guglielmino/Sources/my/astone-bot/server/commands/command-helper.js":"10","/Users/guglielmino/Sources/my/astone-bot/server/commands/consts.js":"11","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/auction-list.cmd.js":"12","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/help.cmd.js":"13","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/new-auction.cmd.js":"14","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/set-auction-property.cmd.js":"15","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/start.cmd.js":"16","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-description.cmd.js":"17","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-min-sub.cmd.js":"18","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-name.cmd.js":"19","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-picture.cmd.js":"20","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-price.cmd.js":"21","/Users/guglielmino/Sources/my/astone-bot/server/config/index.js":"22","/Users/guglielmino/Sources/my/astone-bot/server/services/bot/state-manager.js":"23","/Users/guglielmino/Sources/my/astone-bot/server/services/bot/telegram-chatter.js":"24","/Users/guglielmino/Sources/my/astone-bot/server/services/bot/telegram-req-parser.js":"25","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-ages.js":"26","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-approver.js":"27","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-chant.js":"28","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-consts.js":"29","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-events.js":"30","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-manager.js":"31","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-timer.js":"32","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/manager-factory.js":"33","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/notifications/auction-end-notification.js":"34","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/notifications/auction-start-notification.js":"35","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/user-manager.js":"36","/Users/guglielmino/Sources/my/astone-bot/server/services/logger.js":"37","/Users/guglielmino/Sources/my/astone-bot/server/services/payment/paypal.js":"38","/Users/guglielmino/Sources/my/astone-bot/server/services/scheduler/RepeatingScheduler.js":"39","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/aws/s3.js":"40","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/auction-provider.js":"41","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/index.js":"42","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/provider-helper.js":"43","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/user-provider.js":"44","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/cipher.js":"45","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/encodeQueryCommand.js":"46","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/i18n.js":"47","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/msg-encoder.js":"48","/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/auction-provider.spec.js":"49","/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/storage-provivider-test-extensions.js":"50","/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/user-provider.spec.js":"51","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/bot-api/msg-builder.spec.js":"52","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/auction-property.spec.js":"53","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/bid.cmd.spec.js":"54","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/start-auction.cmd.spec.js":"55","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/auction-list.cmd.spec.js":"56","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/new-auction.cmd.spec.js":"57","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/set-auction-property.cmd.spec.js":"58","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-description.cmd.spec.js":"59","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-min-sub.cmd.spec.js":"60","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-name.cmd.spec.js":"61","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-picture.cmd.spec.js":"62","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-price.cmd.spec.js":"63","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-ages.spec.js":"64","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-approver.spec.js":"65","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-chant.spec.js":"66","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-manager.spec.js":"67","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/notifications/auction-end-notification.spec.js":"68","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/notifications/auction-start-notification.spec.js":"69","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/state-manager.spec.js":"70","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/telegram-chatter.spec.js":"71","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/telegram-req-parser.spes.js":"72","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/cipher.spec.js":"73","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/i18n.spec.js":"74","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/msg-encoder.spec.js":"75","/Users/guglielmino/Sources/my/astone-bot/server/web/index.js":"76","/Users/guglielmino/Sources/my/astone-bot/server/web/messenger.routes.js":"77","/Users/guglielmino/Sources/my/astone-bot/server/web/pages.route.js":"78","/Users/guglielmino/Sources/my/astone-bot/server/web/payment.route.js":"79","/Users/guglielmino/Sources/my/astone-bot/server/web/telegram.route.js":"80","/Users/guglielmino/Sources/my/astone-bot/server/web/url-consts.js":"81"},{"size":6908,"mtime":1573207228470,"results":"82","hashOfConfig":"83"},{"size":4442,"mtime":1573634446101,"results":"84","hashOfConfig":"83"},{"size":2872,"mtime":1573573078316,"results":"85","hashOfConfig":"83"},{"size":634,"mtime":1573207405021,"results":"86","hashOfConfig":"83"},{"size":1114,"mtime":1573736689694,"results":"87","hashOfConfig":"83"},{"size":3726,"mtime":1573207405022,"results":"88","hashOfConfig":"83"},{"size":709,"mtime":1573206156020,"results":"89","hashOfConfig":"83"},{"size":3676,"mtime":1573740022792,"results":"90","hashOfConfig":"83"},{"size":2680,"mtime":1573760473449,"results":"91","hashOfConfig":"83"},{"size":558,"mtime":1573206156021,"results":"92","hashOfConfig":"83"},{"size":1096,"mtime":1572254836490,"results":"93","hashOfConfig":"83"},{"size":2114,"mtime":1573634985295,"results":"94","hashOfConfig":"83"},{"size":696,"mtime":1573209671173,"results":"95","hashOfConfig":"83"},{"size":433,"mtime":1573206156022,"results":"96","hashOfConfig":"83"},{"size":1112,"mtime":1573208483107,"results":"97","hashOfConfig":"83"},{"size":746,"mtime":1573209681183,"results":"98","hashOfConfig":"83"},{"size":1130,"mtime":1573206156022,"results":"99","hashOfConfig":"83"},{"size":1167,"mtime":1573207405022,"results":"100","hashOfConfig":"83"},{"size":1191,"mtime":1573207405022,"results":"101","hashOfConfig":"83"},{"size":1317,"mtime":1573207405022,"results":"102","hashOfConfig":"83"},{"size":1132,"mtime":1573206156023,"results":"103","hashOfConfig":"83"},{"size":1136,"mtime":1573641534535,"results":"104","hashOfConfig":"83"},{"size":870,"mtime":1573206910413,"results":"105","hashOfConfig":"83"},{"size":2001,"mtime":1573207405023,"results":"106","hashOfConfig":"83"},{"size":1993,"mtime":1573635852065,"results":"107","hashOfConfig":"83"},{"size":783,"mtime":1573206156024,"results":"108","hashOfConfig":"83"},{"size":1642,"mtime":1573207405023,"results":"109","hashOfConfig":"83"},{"size":1019,"mtime":1573206156024,"results":"110","hashOfConfig":"83"},{"size":248,"mtime":1572254836493,"results":"111","hashOfConfig":"83"},{"size":1124,"mtime":1573206156024,"results":"112","hashOfConfig":"83"},{"size":6035,"mtime":1573727566046,"results":"113","hashOfConfig":"83"},{"size":549,"mtime":1573207405023,"results":"114","hashOfConfig":"83"},{"size":530,"mtime":1573207405024,"results":"115","hashOfConfig":"83"},{"size":1382,"mtime":1573207405024,"results":"116","hashOfConfig":"83"},{"size":1514,"mtime":1573207405024,"results":"117","hashOfConfig":"83"},{"size":162,"mtime":1573206156026,"results":"118","hashOfConfig":"83"},{"size":491,"mtime":1572432675224,"results":"119","hashOfConfig":"83"},{"size":1049,"mtime":1573209574982,"results":"120","hashOfConfig":"83"},{"size":413,"mtime":1573206156026,"results":"121","hashOfConfig":"83"},{"size":968,"mtime":1573207405024,"results":"122","hashOfConfig":"83"},{"size":6658,"mtime":1573207405024,"results":"123","hashOfConfig":"83"},{"size":838,"mtime":1573641595297,"results":"124","hashOfConfig":"83"},{"size":362,"mtime":1573206156027,"results":"125","hashOfConfig":"83"},{"size":1564,"mtime":1573207405024,"results":"126","hashOfConfig":"83"},{"size":521,"mtime":1573206156027,"results":"127","hashOfConfig":"83"},{"size":168,"mtime":1573635858339,"results":"128","hashOfConfig":"83"},{"size":2266,"mtime":1573207405025,"results":"129","hashOfConfig":"83"},{"size":339,"mtime":1573637047781,"results":"130","hashOfConfig":"83"},{"size":2825,"mtime":1572976777491,"results":"131","hashOfConfig":"83"},{"size":911,"mtime":1573209687095,"results":"132","hashOfConfig":"83"},{"size":966,"mtime":1572976816166,"results":"133","hashOfConfig":"83"},{"size":1820,"mtime":1572976823349,"results":"134","hashOfConfig":"83"},{"size":1360,"mtime":1573206156028,"results":"135","hashOfConfig":"83"},{"size":6430,"mtime":1573206156028,"results":"136","hashOfConfig":"83"},{"size":3175,"mtime":1573206156028,"results":"137","hashOfConfig":"83"},{"size":2596,"mtime":1573206156028,"results":"138","hashOfConfig":"83"},{"size":1477,"mtime":1573206156028,"results":"139","hashOfConfig":"83"},{"size":1927,"mtime":1573206156028,"results":"140","hashOfConfig":"83"},{"size":2178,"mtime":1573206156028,"results":"141","hashOfConfig":"83"},{"size":1755,"mtime":1573206156029,"results":"142","hashOfConfig":"83"},{"size":1851,"mtime":1573206156029,"results":"143","hashOfConfig":"83"},{"size":2856,"mtime":1573206156029,"results":"144","hashOfConfig":"83"},{"size":2557,"mtime":1573206156029,"results":"145","hashOfConfig":"83"},{"size":1909,"mtime":1573206156029,"results":"146","hashOfConfig":"83"},{"size":1263,"mtime":1573206156030,"results":"147","hashOfConfig":"83"},{"size":1596,"mtime":1573206156030,"results":"148","hashOfConfig":"83"},{"size":12043,"mtime":1573206156030,"results":"149","hashOfConfig":"83"},{"size":1212,"mtime":1573206156030,"results":"150","hashOfConfig":"83"},{"size":1711,"mtime":1573206156030,"results":"151","hashOfConfig":"83"},{"size":2809,"mtime":1573206156030,"results":"152","hashOfConfig":"83"},{"size":1165,"mtime":1573206156031,"results":"153","hashOfConfig":"83"},{"size":4493,"mtime":1573209745877,"results":"154","hashOfConfig":"83"},{"size":548,"mtime":1573206156031,"results":"155","hashOfConfig":"83"},{"size":1064,"mtime":1573206156031,"results":"156","hashOfConfig":"83"},{"size":832,"mtime":1573206156031,"results":"157","hashOfConfig":"83"},{"size":1261,"mtime":1573209752650,"results":"158","hashOfConfig":"83"},{"size":1334,"mtime":1573207405028,"results":"159","hashOfConfig":"83"},{"size":406,"mtime":1572976756050,"results":"160","hashOfConfig":"83"},{"size":1254,"mtime":1573207405028,"results":"161","hashOfConfig":"83"},{"size":315,"mtime":1572976569941,"results":"162","hashOfConfig":"83"},{"size":378,"mtime":1573207405028,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},"6iwy41",{"filePath":"167","messages":"168","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":8,"warningCount":8,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":1,"warningCount":3,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":9,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":27,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":18,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":16,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":11,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203"},{"filePath":"204","messages":"205","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":10,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},{"filePath":"221","messages":"222","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":13,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":21,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":11,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264"},{"filePath":"265","messages":"266","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","errorCount":8,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":14,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":26,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":8,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":5,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":16,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":16,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":10,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":7,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","errorCount":8,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"313"},{"filePath":"314","messages":"315","errorCount":10,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"316"},{"filePath":"317","messages":"318","errorCount":9,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","errorCount":12,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","errorCount":11,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","errorCount":11,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":4,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"331"},{"filePath":"332","messages":"333","errorCount":6,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":14,"warningCount":10,"fixableErrorCount":6,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":6,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":12,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":19,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":4,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":6,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"359"},{"filePath":"360","messages":"361","errorCount":3,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":5,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/guglielmino/Sources/my/astone-bot/server/app.commands.js",["377"],"import CommandHelper from './commands/command-helper';\n\nimport AuctionListCommand from './commands/interactive/auction-list.cmd';\nimport StartCommand from './commands/interactive/start.cmd';\nimport NewAuctionCommand from './commands/interactive/new-auction.cmd';\nimport HelpCommand from './commands/interactive/help.cmd';\nimport SetAuctionPropertyCommand from './commands/interactive/set-auction-property.cmd';\n\nimport BidCommand from './commands/callbackquery/bid.cmd';\nimport StartAuctionCommand from './commands/callbackquery/start-auction.cmd';\nimport ActionProperty from './commands/callbackquery/auction-property';\n\nimport AuctionNameCommand from './commands/state/auction-name.cmd';\nimport AuctionDescriptionCommand from './commands/state/auction-description.cmd';\nimport AuctionPriceCommand from './commands/state/auction-price.cmd';\nimport AuctionPictureCommand from './commands/state/auction-picture.cmd';\nimport AuctionMinSubscribersCommand from './commands/state/auction-min-sub.cmd';\n\nimport StorageS3 from './services/storage/aws/s3';\n\nimport * as constants from './commands/consts';\nimport * as urlConsts from './web/url-consts';\n\n/**\n * Istantiate and schedule interactive commands (ie starting with /) to chat manager\n */\nfunction InteractiveCommands(chatManager, telegram, managerFactory, commandHelper, config) {\n  const auctionPageUrl = urlConsts.PAGE_AUCTION_DETAILS.substring(0, urlConsts.PAGE_AUCTION_DETAILS.lastIndexOf('/'));\n  const listCmd = new AuctionListCommand(telegram, managerFactory, commandHelper, `${config.base_url}${auctionPageUrl}`);\n  const startCmd = new StartCommand(telegram, managerFactory, commandHelper);\n  const helpCommand = new HelpCommand(telegram, managerFactory, commandHelper);\n  const newAuctionCmd = new NewAuctionCommand(telegram, commandHelper);\n  const setTitleCmd = new SetAuctionPropertyCommand(telegram, managerFactory, commandHelper,\n    {\n      queryCommand: constants.QCOMMAND_SET_TITLE,\n      answerText: 'Choose an auction to change the title'\n    });\n  const setDescritionCmd = new SetAuctionPropertyCommand(telegram, managerFactory, commandHelper,\n    {\n      queryCommand: constants.QCOMMAND_SET_DESCR,\n      answerText: 'Choose an auction to change the description'\n    });\n  const setPriceCmd = new SetAuctionPropertyCommand(telegram, managerFactory, commandHelper,\n    {\n      queryCommand: constants.QCOMMAND_SET_PRICE,\n      answerText: 'Choose an auction to change starting price'\n    });\n  const setPictCmd = new SetAuctionPropertyCommand(telegram, managerFactory, commandHelper,\n    {\n      queryCommand: constants.QCOMMAND_SET_PICT,\n      answerText: 'Choose an auction to change item picture'\n    });\n  const setMinSubCmd = new SetAuctionPropertyCommand(telegram, managerFactory, commandHelper,\n    {\n      queryCommand: constants.QCOMMAND_SET_MINSUB,\n      answerText: 'Choose an auction to change min number of participants'\n    });\n\n  chatManager.addCommand(constants.COMMAND_LIST, listCmd);\n  chatManager.addCommand(constants.COMMAND_START, startCmd);\n  chatManager.addCommand(constants.COMMAND_HELP, helpCommand);\n  chatManager.addCommand(constants.COMMAND_NEW_AUCTION, newAuctionCmd);\n  chatManager.addCommand(constants.COMMAND_SET_AUCTION_TITLE, setTitleCmd);\n  chatManager.addCommand(constants.COMMAND_SET_AUCTION_DESCR, setDescritionCmd);\n  chatManager.addCommand(constants.COMMAND_SET_AUCTION_PRICE, setPriceCmd);\n  chatManager.addCommand(constants.COMMAND_SET_AUCTION_PICT, setPictCmd);\n  chatManager.addCommand(constants.COMMAND_SET_AUCTION_MINSUB, setMinSubCmd);\n}\n\n/**\n * Instantiate ad schedule QueryCallback Commands (ie 'out-of-band') to chatManager\n */\nfunction QueryCommandsCommands(chatManager, telegram, managerFactory, commandHelper) {\n  const bidCmd = new BidCommand(telegram, managerFactory, commandHelper);\n  const startAuctionCmd = new StartAuctionCommand(telegram, managerFactory, commandHelper);\n  const titleCmd = new ActionProperty(telegram, managerFactory, commandHelper, {\n    answerText: 'Ok, write the new name for the Auction',\n    stateCommand: constants.STATE_WAIT_FOR_NAME\n  });\n  const decrCmd = new ActionProperty(telegram, managerFactory, commandHelper, {\n    answerText: 'Ok, write the new description for the Auction',\n    stateCommand: constants.STATE_WAIT_FOR_DESC\n  });\n  const priceCmd = new ActionProperty(telegram, managerFactory, commandHelper, {\n    answerText: 'Ok, write the new starting price for the Auction',\n    stateCommand: constants.STATE_WAIT_FOR_PRICE\n  });\n  const pictCmd = new ActionProperty(telegram, managerFactory, commandHelper, {\n    answerText: 'Ok, send me a new picture for the Auction',\n    stateCommand: constants.STATE_WAIT_FOR_PICTURE\n  });\n  const minSubCmd = new ActionProperty(telegram, managerFactory, commandHelper, {\n    answerText: 'Ok, send me a new min number of participants',\n    stateCommand: constants.STATE_WAIT_FOR_MIN_SUB\n  });\n\n  chatManager.addCommand(constants.QCOMMAND_START_AUCTION, startAuctionCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_BID, bidCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_SET_TITLE, titleCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_SET_DESCR, decrCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_SET_PRICE, priceCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_SET_PICT, pictCmd, 'QueryResponse');\n  chatManager.addCommand(constants.QCOMMAND_SET_MINSUB, minSubCmd, 'QueryResponse');\n}\n\n/**\n * Instantiate and schedule state commands (ie. commands triggered by state) to chatManager\n */\nfunction StateCommands(chatManager, telegram, managerFactory, commandHelper) {\n  const nameCommand = new AuctionNameCommand(telegram, managerFactory, commandHelper);\n  const descCommand = new AuctionDescriptionCommand(telegram, managerFactory, commandHelper);\n  const priceCommand = new AuctionPriceCommand(telegram, managerFactory, commandHelper);\n  const pictureCommand = new AuctionPictureCommand(telegram, managerFactory, commandHelper, StorageS3());\n  const minSubCommand = new AuctionMinSubscribersCommand(telegram, managerFactory, commandHelper);\n  chatManager.addCommand(constants.STATE_WAIT_FOR_NAME, nameCommand, 'State');\n  chatManager.addCommand(constants.STATE_WAIT_FOR_DESC, descCommand, 'State');\n  chatManager.addCommand(constants.STATE_WAIT_FOR_PRICE, priceCommand, 'State');\n  chatManager.addCommand(constants.STATE_WAIT_FOR_PICTURE, pictureCommand, 'State');\n  chatManager.addCommand(constants.STATE_WAIT_FOR_MIN_SUB, minSubCommand, 'State');\n}\n\nexport default (chatManager, telegram, managerFactory, config) => {\n  const commandHelper = CommandHelper(telegram);\n\n  InteractiveCommands(chatManager, telegram, managerFactory, commandHelper, config);\n  QueryCommandsCommands(chatManager, telegram, managerFactory, commandHelper);\n  StateCommands(chatManager, telegram, managerFactory, commandHelper);\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/app.js",["378"],"/Users/guglielmino/Sources/my/astone-bot/server/astone-cli.js",["379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"/Users/guglielmino/Sources/my/astone-bot/server/bot-api/messenger.js",["395"],"'use strict';\n\nexport default function (request, access_token) {\n  return {\n    sendMessage(recipient, message) {\n      const url = `https://graph.facebook.com/v2.6/me/messages?access_token=${access_token}`;\n\n      let msg = { ...recipient};\n      msg = Object.assign(msg, message);\n\n      const options = {\n        method: 'POST',\n        uri: url,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(msg)\n      };\n\n      return request(options)\n        .then((res) => {\n          const data = JSON.parse(res.body);\n          return Promise.resolve(data);\n        });\n    }\n  };\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/bot-api/msg-builder.js",["396","397","398","399"],"/Users/guglielmino/Sources/my/astone-bot/server/bot-api/telegram.js",["400","401","402","403","404","405","406"],"/**\n * Created by fabrizio on 17/03/16.\n */\n\n'use strict';\n\nclass TelegramBot {\n  constructor(request, apiKey) {\n    this.request = request;\n    this.apiKey = apiKey;\n  }\n\n  getUpdates(offset, limit, timeout) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/getUpdates?offset=${offset}&limit=${limit}&timeout=${timeout}`;\n\n    return this.request(url)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        return Promise.resolve(data);\n      });\n  }\n\n  getMe() {\n    const url = `https://api.telegram.org/bot${this.apiKey}/getMe`;\n\n    return this.request(url)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        return Promise.resolve(data);\n      });\n  }\n\n  sendMessage(msg) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/sendMessage`;\n\n    const options = {\n      method: 'POST',\n      uri: url,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(msg)\n    };\n\n    return this.request(options)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        if (data.ok) {\n          return Promise.resolve(data);\n        }\n\n        return Promise.reject(data.description);\n      })\n      .catch((err) => Promise.reject(err));\n  }\n\n  sendPhoto(photoMsg) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/sendPhoto`;\n\n    const options = {\n      method: 'POST',\n      uri: url,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(photoMsg)\n    };\n\n    return this.request(options)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        if (data.ok) {\n          return Promise.resolve(data);\n        }\n\n        return Promise.reject(data.description);\n      })\n      .catch((err) => {\n        Promise.reject(err);\n      });\n  }\n\n  sendChatAction(chat_id, action) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/sendChatAction?chat_id=${chat_id}&action=${action}`;\n\n    return this.request(url)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        return Promise.resolve(data);\n      });\n  }\n\n  setWebhook(hook_url) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/setWebhook`;\n\n    const options = {\n      method: 'POST',\n      uri: url,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ url: hook_url })\n    };\n\n    return this.request(url)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        return Promise.resolve(data);\n      });\n  }\n\n  answerCallbackQuery(callback_query_id, text = null, show_alert = false) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/answerCallbackQuery`;\n\n    const options = {\n      method: 'POST',\n      uri: url,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        callback_query_id,\n        text,\n        show_alert\n      })\n    };\n\n    return this.request(options)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        if (data.ok) {\n          return Promise.resolve(data);\n        }\n\n        return Promise.reject(data.description);\n      })\n      .catch((err) => {\n        Promise.reject(err);\n      });\n  }\n\n  getFile(file_id) {\n    const url = `https://api.telegram.org/bot${this.apiKey}/getFile?file_id=${file_id}`;\n\n    return this.request(url)\n      .then((res) => {\n        const data = JSON.parse(res.body);\n        if (data.ok) {\n          data.result.file_url = `https://api.telegram.org/file/bot${this.apiKey}/${data.result.file_path}`;\n          return Promise.resolve(data.result);\n        }\n        return Promise.reject(data);\n      });\n  }\n}\n\nexport default TelegramBot;\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/auction-property.js",["407","408","409","410","411","412","413","414","415"],"'use strict';\n\nexport default class AuctionPropertyCommand {\n  constructor(telegram, managerFactory, commandHelper, propertyInfo) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n\n    this._propertyInfo = propertyInfo;\n  }\n\n  execute(state, ...params) {\n    if (params && params.length > 0) {\n      const auctionId = params[0];\n      this._helper\n        .simpleResponse(state.chat.id,\n          this._propertyInfo.answerText);\n\n      this._telegram\n        .answerCallbackQuery(state.callback_query_id, '', false);\n\n      return Promise.resolve({ state: this._propertyInfo.stateCommand, auctionId, single: true });\n    }\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/bid.cmd.js",["416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/callbackquery/start-auction.cmd.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/command-helper.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/commands/consts.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/auction-list.cmd.js",["461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/help.cmd.js",["477"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/new-auction.cmd.js",["478","479","480","481"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class NewAuctionCommand {\n  constructor(telegram, commandHelper) {\n    this._telegram = telegram;\n    this._helper = commandHelper;\n  }\n\n  execute(state, ...params) {\n    this\n      ._helper\n      .simpleResponse(state.chat.id, 'Ok, write the name of the item that You want to sell');\n\n    return Promise.resolve({ state: constants.STATE_WAIT_FOR_NAME });\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/set-auction-property.cmd.js",["482","483","484","485","486","487","488","489","490","491","492"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/interactive/start.cmd.js",["493"],"/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-description.cmd.js",["494","495","496","497","498","499","500","501"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class AuctionDescriptionCommand {\n  constructor(telegram, managerFactory, commandHelper) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n  }\n\n  execute(state, ...params) {\n    const description = params[0];\n\n    if (!description || description.length == 0) {\n      this._helper\n        .simpleResponse\n        .calledWith(state.chat.id,\n          'Give a description of the item You want to sell');\n      return Promise.resolve({ state: constants.STATE_WAIT_FOR_DESC, result: false });\n    }\n\n    const nextState = (state.single ? null : constants.STATE_WAIT_FOR_PRICE);\n    return this\n      ._auctionManager\n      .updateAuction(state.auctionId, { description })\n      .then((res) => {\n        this._helper\n          .simpleResponse(state.chat.id, state.single ? 'Ok, description changed' : 'Now You need to set a starting price');\n\n        return Promise.resolve({ state: nextState, result: true, single: false });\n      })\n      .catch((err) => Promise.reject(err));\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-min-sub.cmd.js",["502","503","504","505","506","507","508","509"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class AuctionMinSubscribersCommand {\n  constructor(telegram, managerFactory, commandHelper) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n  }\n\n  execute(state, ...params) {\n    const minParticipants = parseInt(params[0]);\n\n    if (!minParticipants || minParticipants < 0) {\n      this._helper\n        .simpleResponse\n        .calledWith(state.chat.id,\n          'Min number of participants must be greather or equal than 0');\n      return Promise.resolve({ state: constants.STATE_WAIT_FOR_MIN_SUB, result: false });\n    }\n    return this\n      ._auctionManager\n      .updateAuction(state.auctionId, { minSubscribers: minParticipants })\n      .then((res) => {\n        this._helper\n          .simpleResponse(state.chat.id, state.single ? 'Ok, number of participants changed' : 'Very well, Your Auction will be evaluated by our review Team, You will be contacted when ready.');\n        return Promise.resolve({ state: null, result: true, single: false });\n      })\n      .catch((err) => Promise.reject(err));\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-name.cmd.js",["510","511","512","513","514","515","516","517"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class AuctionNameCommand {\n  constructor(telegram, managerFactory, commandHelper) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n  }\n\n  execute(state, ...params) {\n    if (state.auctionId && state.single) {\n      return this\n        ._auctionManager\n        .updateAuction(state.auctionId, { title: params[0] })\n        .then((res) => {\n          this._helper\n            .simpleResponse(state.chat.id, 'Ok, name changed');\n          return Promise.resolve({ state: null, result: true, single: false });\n        })\n        .catch((err) => Promise.reject(err));\n    }\n    return this\n      ._auctionManager\n      .createAuction({ username: state.chat.username, chatId: state.chat.id }, params[0])\n      .then((res) => {\n        this._helper\n          .simpleResponse(state.chat.id, 'Ok, give me now a description of the item to sell');\n        return Promise.resolve({\n          state: constants.STATE_WAIT_FOR_DESC,\n          auctionId: res,\n          single: false\n        });\n      })\n      .catch((err) => Promise.reject(err));\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-picture.cmd.js",["518","519","520","521","522","523","524","525","526","527"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class AuctionPictureCommand {\n  constructor(telegram, managerFactory, commandHelper, s3Obj) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n    this.s3Obj = s3Obj;\n  }\n\n  execute(state, ...params) {\n    const photos = params[0];\n    if (photos) {\n      const pict = photos.reduce((prev, cur) => ((prev.file_size > cur.file_size) ? prev : cur));\n\n      let telegramResponse = null;\n      return this._telegram\n        .getFile(pict.file_id)\n        .then((res) => {\n          telegramResponse = res;\n          // Store image on AWS S3\n          return this.s3Obj.urlToS3(res.file_url);\n        })\n        .then((res) => {\n          const nextState = (state.single ? null : constants.STATE_WAIT_FOR_MIN_SUB);\n          this._auctionManager\n            .updateAuction(state.auctionId, { file_id: telegramResponse.file_id, image: res.Location }) // res.Location\n            .then((res) => {\n              this._helper\n                .simpleResponse(state.chat.id, state.single ? 'Ok, picture changed' : 'Minimum number of participants ? ');\n            });\n\n          return Promise.resolve({ state: nextState, result: true, single: false });\n        });\n    }\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/commands/state/auction-price.cmd.js",["528","529","530","531","532","533","534"],"'use strict';\n\nimport * as constants from '../consts';\n\nexport default class AuctionPriceCommand {\n  constructor(telegram, managerFactory, commandHelper) {\n    this._telegram = telegram;\n    this._auctionManager = managerFactory.getAuctionManager();\n    this._helper = commandHelper;\n  }\n\n  execute(state, ...params) {\n    const price = parseFloat(params[0]);\n\n    if (!price || price <= 0) {\n      this._helper\n        .simpleResponse\n        .calledWith(state.chat.id,\n          'Start price must be greather than 0');\n      return Promise.resolve({ state: constants.STATE_WAIT_FOR_PRICE, result: false });\n    }\n\n    return this\n      ._auctionManager\n      .updateAuction(state.auctionId, { startingPrice: price, price })\n      .then((res) => {\n        const nextState = (state.single ? null : constants.STATE_WAIT_FOR_PICTURE);\n\n        this._helper\n          .simpleResponse(state.chat.id, state.single ? 'Ok, price changed' : 'Ok, send me a picture of the object You want to sell');\n        return Promise.resolve({ state: nextState, result: true, single: false });\n      })\n      .catch((err) => Promise.reject(err));\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/config/index.js",["535","536","537","538"],"/Users/guglielmino/Sources/my/astone-bot/server/services/bot/state-manager.js",["539","540"],"const keyPrefix = 'state:';\n\nexport default (client) => {\n  const self = {\n    setState: (chatId, value) => client\n      .setAsync(`${keyPrefix}${chatId}`, JSON.stringify(value)),\n\n    getState: (chatId) => client\n      .getAsync(`${keyPrefix}${chatId}`)\n      .then((val) => (val ? Promise.resolve(JSON.parse(val)) : null)),\n\n    updateState: (chatId, value) => {\n      if (typeof value !== 'object') {\n        throw Error(\"\\'value\\' must be an object\");\n      }\n      return self.getState(chatId)\n        .then((stored) => self\n          .setState(chatId, Object.assign(stored, value)))\n        .then(() => self\n          .getState(chatId));\n    },\n\n    exists: (chatId) => client\n      .existsAsync(`${keyPrefix}${chatId}`)\n      .then((res) => Promise.resolve(res > 0)),\n\n\n    del: (chatId) => client\n      .delAsync(`${keyPrefix}${chatId}`)\n  };\n\n  return self;\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/bot/telegram-chatter.js",["541","542","543","544","545"],"'use strict';\n\nimport logger from '../logger';\n\nexport default class TelegramChatter {\n  constructor(stateManager, telegramRequestParser) {\n    this.stateManager = stateManager;\n    this.telegramRequestParser = telegramRequestParser;\n    this.commands = {};\n  }\n\n  processRequest(request) {\n    const message = this.telegramRequestParser\n      .getMessage(request);\n\n    if (message) {\n      this.stateManager\n        .exists(message.chat.id)\n        .then((exist) => {\n          if (!exist) {\n            this.stateManager.setState(message.chat.id, { chat: message.chat });\n          }\n          return this.stateManager.getState(message.chat.id);\n        })\n        .then((state) => {\n          const commandId = this.telegramRequestParser\n            .getCommandId(request);\n\n          if (commandId) {\n            const command = this._getCommand(commandId.commandKey || state.state, commandId.type);\n            if (command) {\n              state.callback_query_id = commandId.callback_query_id;\n              this._executeCommand(command, state, commandId.params);\n            }\n          }\n        });\n    }\n  }\n\n  addCommand(key, cmd, type = 'Interactive') {\n    this.commands[key.toLowerCase()] = { cmd, type };\n  }\n\n  /**\n   * Execute command and use returned object to update state (if present)\n   * @param state\n   * @param data\n   * @private\n   */\n  _executeCommand(command, state, data) {\n    command.cmd.execute(state, data)\n      .then((res) => {\n        if (res) {\n          this.stateManager\n            .updateState(state.chat.id, res);\n        }\n      })\n      .catch((err) => {\n        logger.error(`Execute command error: ${err.message}`);\n      });\n  }\n\n  _getCommand(key, type) {\n    let res = null;\n    if (key) {\n      const lowerKey = key.toLowerCase();\n      if (this.commands.hasOwnProperty(lowerKey)) {\n        const command = this.commands[lowerKey];\n        if (command && command.type === type) {\n          res = command;\n        }\n      }\n    }\n    return res;\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/bot/telegram-req-parser.js",["546","547","548","549"],"/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-ages.js",["550","551"],"export default function () {\n  const ageMessages = {\n    65: (auction) => `No one offer more than € ${auction.price} ?`,\n    70: (auction) => 'Come on, don\\'t be shy, make an offer',\n    90: (auction) => `*€ ${auction.price}* and one`,\n    95: (auction) => `*€ ${auction.price}* and two`,\n    100: (auction) => `*€ ${auction.price}* and three`,\n    103: (auction) => `*${auction.title}* sold for *€ ${auction.price}* to @${auction.bestBidder.username}  💰`\n  };\n\n  const ages = Object.keys(ageMessages);\n  const maxAge = Math.max.apply(null, ages);\n\n  return {\n    getMessage(auction) {\n      if (ageMessages[auction.bidAge]) {\n        return { message: ageMessages[auction.bidAge](auction), isLast: (auction.bidAge === maxAge) };\n      }\n      return null;\n    }\n  };\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-approver.js",["552","553","554","555","556"],"'use strict';\n\n\nexport default function (telegram, auctionManager) {\n  return {\n    approve(auctionId, date) {\n      const startDate = new Date(date);\n\n      return auctionManager\n        .getAuctionById(auctionId)\n        .then((auc) => auctionManager\n          .updateAuction(auctionId, { startDate }))\n        .then((res) => {\n          if (!res) throw new Error('Can\\'t approve the auction');\n          return auctionManager\n            .getAuctionById(auctionId);\n        })\n        .then((updatedAuction) => telegram\n          .sendMessage({\n            chat_id: updatedAuction.owner.chatId,\n            text: `Your auction *${updatedAuction.title}* is approved! \nIt's schedulated for ${updatedAuction.startDate.toString()}. \nInvites other users to get more chances to make a big deal!!!`,\n            parse_mode: 'Markdown'\n          }))\n        .catch((err) => console.log(err));\n    },\n\n    reject(auctionId) {\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 1);\n      let updatedAuction = null;\n\n      return auctionManager\n        .getAuctionById(auctionId)\n        .then((res) => {\n          updatedAuction = res;\n          console.log(`UP ${JSON.stringify(updatedAuction)}`);\n          return auctionManager\n            .closeAuction(auctionId);\n        })\n        .then((x) => telegram\n          .sendMessage({\n            chat_id: updatedAuction.owner.chatId,\n            text: `Your auction *${updatedAuction.title}* not comply with policies of Astone.\nAuction was rejected, sorry :-(`,\n            parse_mode: 'Markdown'\n          }))\n        .catch((err) => console.log(err));\n    }\n  };\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-chant.js",["557","558","559","560"],"'use strict';\n\nexport default (telegram, auctionManager, auctionAges) => {\n  const AGE_TRIGGER = 60;\n\n  function _handleAgeMessage(auction) {\n    let ret = false;\n\n    if (auction.bidAge > AGE_TRIGGER) {\n      const ageMessage = auctionAges.getMessage(auction);\n      if (ageMessage) {\n        _sendMessageToSubscribers(auction, ageMessage.message);\n        ret = ageMessage.isLast;\n      }\n    }\n\n    return ret;\n  }\n\n  function _sendMessageToSubscribers(auction, message) {\n    auction.subscribers.forEach((subscriber) => {\n      telegram.sendMessage({\n        chat_id: subscriber.chatId,\n        text: message,\n        parse_mode: 'Markdown'\n      });\n    });\n  }\n\n  return {\n    make: (now) => auctionManager\n      .getRunningAuctionsBidAge(now, AGE_TRIGGER)\n      .then((res) => {\n        res.forEach((auction) => {\n          if (_handleAgeMessage(auction)) {\n            auctionManager\n              .closeAuction(auction._id);\n          }\n        });\n        return Promise.resolve(res.length);\n      })\n  };\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-consts.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-events.js",["561","562","563","564","565","566","567","568","569","570","571","572","573"],"import * as auctionConsts from './auction-consts';\nimport Cipher from '../utilities/cipher';\n\nexport default class AuctionEvents {\n  constructor(telegram, i18n, auctionManager, closeAuctionUrl, cipherPassword) {\n    this._telegram = telegram;\n    this._i18n = i18n;\n    this._auctionManager = auctionManager;\n    this._closeAuctionUrl = closeAuctionUrl;\n    this._cipherPassword = cipherPassword;\n  }\n\n  onCloseAuction(auction) {\n    this._auctionManager\n      .closeAuction(auction._id)\n      .then((res) => {\n        if (res) {\n          const encryptedId = new Cipher().encrypt(auction._id.toString(), this._cipherPassword);\n          this._telegram\n            .sendMessage({\n              chat_id: auction.bestBidder.chatId,\n              text: `You've won the item *${auction.title}*, use the Pay button to pay it (€ ${auction.price})`,\n              parse_mode: 'Markdown',\n              reply_markup: {\n                inline_keyboard: [[{ text: 'Pay', url: `${this._closeAuctionUrl}?token=${encryptedId}` }]]\n              }\n            })\n            .catch((err) => {\n\n            });\n        }\n      });\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-manager.js",["574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594"],"/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-timer.js",["595","596","597","598","599","600","601","602","603","604","605"],"import cron from 'cron';\n\nexport default class AuctionTimer {\n  constructor() {\n    this._timerTicks = 0;\n\n    this._timedFunctions = [];\n\n    this._job = new cron.CronJob({\n      cronTime: '* * * * * *',\n      onTick: this._timerFunc.bind(this),\n      start: false,\n      timeZone: 'Europe/Rome'\n    });\n  }\n\n  schedule(func) {\n    this._timedFunctions\n      .push(func);\n  }\n\n  start() {\n    this._job.start();\n  }\n\n  _timerFunc() {\n    this._timerTicks++;\n\n    this._timedFunctions.forEach((func) => {\n      func(this._timerTicks);\n    });\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/manager-factory.js",["606","607"],"import AuctionManager from './auction-manager';\nimport UserManager from './user-manager';\n\nexport default (storageProvider) => {\n  let _auctionManager;\n  let _userManager;\n\n  return {\n    getAuctionManager() {\n      if (!_auctionManager) {\n        _auctionManager = new AuctionManager(storageProvider.auctionProvider);\n      }\n      return _auctionManager;\n    },\n\n    getUserManager() {\n      if (!_userManager) {\n        _userManager = UserManager(storageProvider.userProvider);\n      }\n      return _userManager;\n    }\n  };\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/notifications/auction-end-notification.js",["608","609"],"'use strict';\n\nimport * as consts from '../auction-consts';\n\n/**\n * Notification\n *\n * @param telegram\n * @param managerFactory\n * @returns {{sendNotification: (function(*=, *=, *=))}}\n */\nexport default (telegram, managerFactory) => ({\n  sendNotification: (date) => new Promise((resolve, reject) => {\n    managerFactory\n      .getAuctionManager()\n      .getClosedAndWaitingForPayment(date)\n      .then((auctions) => {\n        auctions.forEach((auction) => {\n          telegram\n            .sendMessage({\n              chat_id: auction.bestBidder.chatId,\n              text: `You won *${auction.title}*, @${auction.owner.username} is waiting for payment of ${auction.price} EUR to send the item, chats with him to close the deal.`,\n              parse_mode: 'Markdown'\n            })\n            .then((res) => {\n              telegram\n                .sendMessage({\n                  chat_id: auction.owner.chatId,\n                  text: `@${auction.bestBidder.username} won Your auction, he received a notification to contact You and close the deal`,\n                  parse_mode: 'Markdown'\n                });\n            });\n\n          managerFactory\n            .getAuctionManager()\n            .updateAuction(auction._id, { state: consts.AUCTION_STATE_PAYMENT_REQ_SENT });\n        });\n\n        resolve(auctions.length);\n      })\n      .catch((err) => reject(err));\n  })\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/notifications/auction-start-notification.js",["610","611","612","613"],"'use strict';\n\nimport * as constants from '../../../commands/consts';\nimport encodeQueryCommand from '../../utilities/encodeQueryCommand';\n\nexport default (telegram, managerFactory) => {\n  function getStartingAuctions(date, minutes) {\n    return managerFactory\n      .getAuctionManager()\n      .getStarting(date, minutes);\n  }\n\n  function notify(auction, auctionBaseUrl) {\n    managerFactory\n      .getUserManager()\n      .getAll()\n      .then((users) => {\n        users.forEach((user) => {\n          const buttons = [];\n          buttons.push([\n            {\n              text: `Start bidding on ${auction.title}`,\n              callback_data: encodeQueryCommand(constants.QCOMMAND_START_AUCTION, auction._id.toString())\n            }\n          ]);\n\n          telegram\n            .sendMessage({\n              chat_id: user.id,\n              text: `Auction *${auction.title}* is starting, ${auctionBaseUrl}/${auction._id}`,\n              parse_mode: 'Markdown',\n              reply_markup: {\n                inline_keyboard: buttons\n              }\n            });\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return {\n    sendNotification: (date, auctionBaseUrl) => new Promise((resolve, reject) => {\n      getStartingAuctions(date, 0)\n        .then((auctions) => {\n          auctions.forEach((auction) => {\n            notify(auction, auctionBaseUrl);\n          });\n\n          resolve(auctions.length);\n        })\n        .catch((err) => reject(err));\n    })\n  };\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/domain/user-manager.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/services/logger.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/services/payment/paypal.js",["614","615","616"],"/Users/guglielmino/Sources/my/astone-bot/server/services/scheduler/RepeatingScheduler.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/services/storage/aws/s3.js",["617","618"],"'use strict';\n\nimport URL from 'url';\nimport http from 'http';\nimport https from 'https';\nimport request from 'request';\nimport AWS from 'aws-sdk';\n\n\nexport default () => {\n  const getClient = (url) => {\n    const urlObj = URL.parse(url);\n    if (urlObj.protocol === 'https:') {\n      return https;\n    }\n\n    return http;\n  };\n\n\n  const UrlToS3 = (url) => new Promise((resolve, reject) => {\n    getClient(url)\n      .get(url, (response) => {\n        const contentType = response.headers['content-type'];\n\n        const filename = url.substring(url.lastIndexOf('/') + 1);\n        const s3obj = new AWS.S3({ params: { Bucket: 'astone-res', Key: filename, ContentType: contentType } });\n        s3obj.upload({ Body: response }, (err, data) => {\n          if (response.statusCode == 200) {\n            if (err) { reject(err); } else { resolve(data); }\n          } else { reject(response.statusCode); }\n        });\n      });\n  });\n\n  return {\n    urlToS3: UrlToS3\n  };\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/auction-provider.js",["619"],"import mongodb from 'mongodb';\nimport { queryExecutor } from './provider-helper';\n\nconst COLLECTION_NAME = 'auctions';\n\nexport default class AuctionProvider {\n  constructor(db) {\n    this.db = db;\n    this.findDocs = queryExecutor(db, COLLECTION_NAME);\n    this.db.collection(COLLECTION_NAME, (err, col) => {\n      col.createIndex({ description: 'text' });\n      col.createIndex({ title: 1 }, { w: 1, unique: true });\n    });\n  }\n\n  save(auctionData) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n\n        const doc = {createdAt: new Date(), ...auctionData};\n\n        col.insertOne(doc, (err, r) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(r.insertedId);\n          }\n        });\n      });\n    });\n  }\n\n  getAuctionById(auctionId) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        const objId = mongodb.ObjectID(auctionId);\n        col.find({ _id: objId })\n          .toArray((err, docs) => {\n            if (err) {\n              reject(err);\n            } else if (docs.length !== 1) {reject(new Error('Query returned wrong number of elements'));} else {resolve(docs[0]);}\n          });\n      });\n    });\n  }\n\n  /**\n   * Get all active auctions, active means with a startDate less or equal date\n   * and not closed\n   * @returns {Promise}\n   */\n  getActiveAuctions(date) {\n    const query = {\n      $and: [\n        { startDate: { $lte: date } },\n        {\n          $or: [\n            { closed: false },\n            { closed: { $exists: false } }\n          ]\n        }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n  /**\n   * Get auctions waiting for approvation\n   */\n  getNewAuctions() {\n    const query = {\n      $and: [\n        { startDate: { $exists: false } },\n        {\n          $or: [\n            { closed: false },\n            { closed: { $exists: false } }\n          ]\n        }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n  /**\n   * Returns all the Auctions with at least a bid\n   * @returns {Promise}\n   */\n  getRunningAuctions() {\n    const query = {\n      $and: [\n        { lastBid: { $exists: true } },\n        {\n          $or: [\n            { closed: false },\n            { closed: { $exists: false } }\n          ]\n        }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n  /**\n   * Get all closed auctions, ie. the ones with closed=true having the state passed\n   * as second argument\n   * @returns {Promise}\n   */\n  getClosedInState(date, state) {\n    const query = {\n      $and: [\n        { startDate: { $lte: date } },\n        { closed: true },\n        { state }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n  /**\n   * Returns the auctions starting in \"minutes\" from the date\n   * Ie. passing as date 2016-01-01 10:00  and minutes 5 it returns\n   * all the auctions with startDate 2016-01-01 10:05\n   * @param date\n   * @param minutes\n   */\n  getStarting(date, minutes) {\n    const startRange = new Date(date.getTime() + (minutes * 60000));\n    const endRange = new Date(startRange.getTime() + (1 * 60000));\n\n    const query = {\n      $and: [\n        { startDate: { $gte: startRange, $lte: endRange } },\n        {\n          $or: [\n            { closed: false },\n            { closed: { $exists: false } }\n          ]\n        }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n  /**\n   * Get auctions owned by a username\n   * @param username\n   */\n  getAuctionsByOwner(username) {\n    const query = {\n      $and: [\n        { username },\n        {\n          $or: [\n            { closed: false },\n            { closed: { $exists: false } }\n          ]\n        }\n      ]\n    };\n\n    return this.findDocs(query);\n  }\n\n\n  search(term) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        col.find({ $text: { $search: term } }, { score: { $meta: 'textScore' } })\n          .sort({ score: { $meta: 'textScore' } })\n          .toArray((err, docs) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(docs);\n            }\n          });\n      });\n    });\n  }\n\n  addBid(auctionId, user, value) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n\n        col.updateOne({ _id: mongodb.ObjectID(auctionId) },\n          {\n            $set: {\n              price: value, bestBidder: user, lastBid: new Date()\n            }\n          },\n          (err, r) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(r.result.ok === 1);\n            }\n          });\n      });\n    });\n  }\n\n  addSubscriberToAuction(auctionId, user) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n\n        col.updateOne({ _id: mongodb.ObjectID(auctionId) },\n          { $addToSet: { subscribers: user } },\n          (err, r) => {\n            if (err) {\n              reject(err);\n            } else {\n              col.find({ _id: mongodb.ObjectID(auctionId) })\n                .limit(1)\n                .next((err, doc) => {\n                  if (err) {\n                    reject(err);\n                  } else {\n                    resolve(doc);\n                  }\n                });\n            }\n          });\n      });\n    });\n  }\n\n  getAuctionsBySubscriber(username) {\n    return this.findDocs({ username });\n  }\n\n  closeAuction(auctionId) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n\n        col.updateOne({ _id: mongodb.ObjectID(auctionId) },\n          {\n            $set: { closed: true, state: 'WAIT_FOR_PAYMENT', closeDate: new Date() }\n          },\n          (err, r) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(r.result.ok == 1);\n            }\n          });\n      });\n    });\n  }\n\n  updateAuction(auctionId, data) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n        col.updateOne({ _id: mongodb.ObjectID(auctionId) },\n          {\n            $set: data\n          },\n          (err, r) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(r.result.ok === 1);\n            }\n          });\n      });\n    });\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/index.js",["620","621","622","623","624","625","626","627"],"/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/provider-helper.js",["628","629"],"'use strict';\n\nexport function queryExecutor(db, COLLECTION_NAME) {\n  return (query) => new Promise((resolve, reject) => {\n    db.collection(COLLECTION_NAME, (err, col) => {\n      col.find(query)\n        .toArray((err, docs) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(docs);\n          }\n        });\n    });\n  });\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/storage/mongodb/user-provider.js",["630","631","632","633"],"import { queryExecutor } from './provider-helper';\n\nconst COLLECTION_NAME = 'users';\n\nexport default class UserProvider {\n  constructor(db) {\n    this.db = db;\n    this.findDocs = queryExecutor(db, COLLECTION_NAME);\n\n    this.db.collection(COLLECTION_NAME, (err, col) => {\n      col.createIndex({ username: 1 }, { w: 1, unique: true });\n    });\n  }\n\n  save(userData) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n\n\n        col.insertOne(userData, (err, r) => {\n          if (err) {\n            if (err.code === 11000) {\n              col.updateOne({ username: userData.username },\n                { $set: { id: userData.id } },\n                (err, r) => {\n                  if (err) {\n                    reject(err);\n                  } else {\n                    resolve(r.result.ok);\n                  }\n                });\n            }\n            reject(err);\n          } else {\n            resolve(r.insertedCount);\n          }\n        });\n      });\n    });\n  }\n\n  updateLang(usename, langCode) {\n    return new Promise((resolve, reject) => {\n      this.db.collection(COLLECTION_NAME, (err, col) => {\n        if (err) {\n          reject(err);\n        }\n        col.updateOne({ username: usename }, { $set: { lang: langCode } }, (err, r) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(r.result.ok === 1);\n          }\n        });\n      });\n    });\n  }\n\n  getAll() {\n    return this.findDocs({});\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/cipher.js",["634","635"],"import crypto from 'crypto';\n\nconst ALGORITHM = 'aes-256-ctr';\n\nexport default class Cipher {\n  encrypt(plaintext, passowrd) {\n    const cipher = crypto.createCipher(ALGORITHM, passowrd);\n    let crypted = cipher.update(plaintext, 'utf8', 'hex');\n    crypted += cipher.final('hex');\n    return crypted;\n  }\n\n\n  decrypt(encrypted, password) {\n    const decipher = crypto.createDecipher(ALGORITHM, password);\n    let dec = decipher.update(encrypted, 'hex', 'utf8');\n    dec += decipher.final('utf8');\n    return dec;\n  }\n}\n","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/encodeQueryCommand.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/i18n.js",["636","637","638","639","640","641","642","643","644","645","646","647","648","649"],"const typeInfoRegex = /^:([a-z])(\\((.+)\\))?/;\n\nclass I18nBuilder {\n  constructor() {\n    this._localizers = {\n      s /* string */: (v) => v.toLocaleString(this.locale),\n      c /* currency */: (v, currency) => (\n        v.toLocaleString(this.locale, {\n          style: 'currency',\n          currency: currency || this.defaultCurrency\n        })\n      ),\n      n /* number */: (v, fractionalDigits) => (\n        v.toLocaleString(this.locale, {\n          minimumFractionDigits: fractionalDigits,\n          maximumFractionDigits: fractionalDigits\n        })\n      )\n    };\n  }\n\n  build({ locale, defaultCurrency, messageBundle }) {\n    this.locale = locale;\n    this.defaultCurrency = defaultCurrency;\n    this.messageBundle = messageBundle;\n    return this.translate;\n  }\n\n  translate(literals, ...values) {\n    const translationKey = this._buildKey(literals);\n    const translationString = this.messageBundle[translationKey];\n\n    if (translationString) {\n      const typeInfoForValues = literals.slice(1).map(this._extractTypeInfo);\n      const localizedValues = values.map((v, i) => this._localize(v, typeInfoForValues[i]));\n      return this._buildMessage(translationString, localizedValues);\n    }\n\n    return this._buildMessage(translationKey, values);\n  }\n\n\n  _extractTypeInfo(literal) {\n    const match = typeInfoRegex.exec(literal);\n    if (match) {\n      return { type: match[1], options: match[3] };\n    }\n    return { type: 's', options: '' };\n  }\n\n  _localize(value, { type, options }) {\n    return this._localizers[type](value, options);\n  }\n\n  // e.g. this._buildKey(['', ' has ', ':c in the']) == '{0} has {1} in the bank'\n  _buildKey(literals) {\n    const stripType = (s) => s.replace(typeInfoRegex, '');\n    const lastPartialKey = stripType(literals[literals.length - 1]);\n    const prependPartialKey = (memo, curr, i) => `${stripType(curr)}{${i}}${memo}`;\n\n    return literals.slice(0, -1).reduceRight(prependPartialKey, lastPartialKey);\n  }\n\n  _buildMessage(str, ...values) {\n    return str.replace(/{(\\d)}/g, (_, index) => values[Number(index)]);\n  }\n}\n\nexport default ({ locale, defaultCurrency, messageBundle }) => {\n  const builder = new I18nBuilder();\n  return builder.build({ locale, defaultCurrency, messageBundle })\n    .bind(builder);\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/services/utilities/msg-encoder.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/auction-provider.spec.js",["650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport StorageProvider from './storage-provivider-test-extensions';\nimport { ObjectID } from 'mongodb';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\ndescribe('AuctionProvider', () => {\n  let storageProvider;\n\n  beforeEach((done) => {\n    storageProvider = new StorageProvider();\n\n    storageProvider\n      .connect({\n        mongo: {\n          uri: 'mongodb://192.168.99.100:27017/astone-test'\n        }\n      }\n      )\n      .then((db) => {\n        done();\n      })\n      .catch(err => {\n        done(err);\n      });\n  });\n\n  afterEach((done) => {\n    storageProvider.dropDb();\n    done();\n  });\n\n\n  it('Should returns auctions starting in next 5 min', (done) => {\n    const refDate = new Date('2016-12-16T09:00:00.000Z');\n\n    storageProvider\n      .readFixture('starting-auctions.json',\n        err => {\n          storageProvider\n            .auctionProvider\n            .getStarting(refDate, 5)\n            .then(auctions => {\n              auctions.length.should.be.equal(1);\n              auctions[0].title.should.be.equal('GameBoy');\n              done();\n            })\n            .catch(err => {\n              done(err);\n            });\n        });\n  });\n\n  it('Should returns auctions starting now', (done) => {\n    const refDate = new Date('2016-12-16T09:00:00.000Z');\n\n    storageProvider\n      .readFixture('starting-auctions.json',\n        err => {\n          storageProvider\n            .auctionProvider\n            .getStarting(refDate, 0)\n            .then(auctions => {\n              auctions.length.should.be.equal(1);\n              auctions[0].title.should.be.equal('VIC 20');\n              done();\n            })\n            .catch(err => {\n              done(err);\n            });\n        });\n  });\n\n  it('Should returns auctions without start date', (done) => {\n    storageProvider\n      .readFixture('new-auctions.json',\n        err => {\n          storageProvider\n            .auctionProvider\n            .getNewAuctions()\n            .then(auctions => {\n              auctions.length.should.be.equal(2);\n              done();\n            })\n            .catch(err => {\n              done(err);\n            });\n        });\n  });\n\n  it('Should create an auction with specific owner data', (done) => {\n    storageProvider\n      .auctionProvider\n      .save({ owner: { username: 'guglielmino', chatId: '12344444' }, title: 'A sample auction' })\n      .then((res) => {\n        res.should.not.be.null;\n        return storageProvider\n          .auctionProvider\n          .getAuctionById(res);\n      })\n      .then(auction => {\n        auction.owner.username.should.be.equal('guglielmino');\n        done();\n      })\n      .catch(err => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/storage-provivider-test-extensions.js",["676"],"/Users/guglielmino/Sources/my/astone-bot/server/test/e2e/services/storage/mongodb/user-provider.spec.js",["677","678","679","680","681","682","683","684"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport StorageProvider from './storage-provivider-test-extensions';\n\nchai.should();\nconst expect = chai.expect;\n\ndescribe('UsersProvider', () => {\n  let storageProvider;\n\n  beforeEach((done) => {\n    storageProvider = new StorageProvider();\n    storageProvider\n      .connect({\n        mongo: {\n          uri: 'mongodb://192.168.99.100:27017/astone-test'\n        }\n      }\n      )\n      .then((db) => {\n        storageProvider\n          .readFixture('all-users.json',\n            (err, r) => {\n              done(err);\n            });\n      });\n  });\n\n\n  afterEach((done) => {\n    storageProvider.dropDb();\n    done();\n  });\n\n  it('Should returns all registered users', (done) => {\n    storageProvider\n      .userProvider\n      .getAll()\n      .then(users => {\n        users.length\n          .should.be.equal(3);\n        done();\n      })\n      .catch(err => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/bot-api/msg-builder.spec.js",["685","686","687","688","689","690"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nimport { messageBuilder, photoBuilder } from '../../../bot-api/msg-builder';\n\nchai.should();\nconst expect = chai.expect;\n\ndescribe('Builders', () => {\n  describe('messageBuilder', () => {\n    let builder;\n\n    beforeEach(() => {\n      builder = messageBuilder();\n    });\n\n    it('Should create a Markdown message to be sent with Telegram', () => {\n      const message = builder\n        .setRecipient({ username: 'guglielmino', chatId: 345 })\n        .setText('Markdown *test*')\n        .setMode('Markdown')\n        .build();\n\n      message.chat_id.should.be.equal(345);\n      message.text.should.be.equal('Markdown *test*');\n      message.parse_mode.should.be.equal('Markdown');\n    });\n\n    it('Should create a message to be sent with Telegram', () => {\n      const message = builder\n        .setRecipient({ username: 'guglielmino', chatId: 1234 })\n        .setText('Plain test')\n        .build();\n\n      message.chat_id.should.be.equal(1234);\n      message.text.should.be.equal('Plain test');\n      expect(message.parse_mode).to.be.undefined;\n    });\n\n    it('Should throw if user is\\'t set', () => {\n      (function () {\n        builder\n          .setText('This is a test')\n          .build();\n      }).should.throw('Recipient not set');\n    });\n  });\n\n  describe('photoBuilder', () => {\n    let builder;\n\n    beforeEach(() => {\n      builder = photoBuilder();\n    });\n\n    it('Should creare a photo message', () => {\n      const photo = builder\n        .setRecipient({ username: 'guglielmino', chatId: 4444 })\n        .setPhoto('XXDJFWI')\n        .setCaption('A caption')\n        .build();\n\n      photo.chat_id.should.be.equal(4444);\n      photo.photo.should.be.equal('XXDJFWI');\n      photo.caption.should.be.equal('A caption');\n    });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/auction-property.spec.js",["691","692","693","694"],"/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/bid.cmd.spec.js",["695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { BidResponse } from '../../../../services/domain/auction-manager';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\n\nchai.should();\nconst expect = chai.expect;\n\nimport BidCommand from '../../../../commands/callbackquery/bid.cmd';\n\ndescribe('BidCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n\n  beforeEach(() => {\n    telegram = {};\n    telegram.sendMessage = sinon.stub();\n    telegram.answerCallbackQuery = sinon.stub();\n\n    auctionManager = {};\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    commandHelper = sinon.stub(CommandHelper(telegram));\n  });\n\n  it('Should respond asking to select an Auction when trying to bid without selecting one', (done) => {\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n\n    command.execute({ chat: { id: 10 } }, [10])\n      .then((res) => {\n        commandHelper\n          .simpleResponse\n          .calledWith(10, 'Before bidding You must choose an active auction')\n          .should.be.ok;\n        done();\n      });\n  });\n\n  it('Should respond \\'Auction closed\\' when bid on a closed Auction', (done) => {\n    auctionManager.bid = sinon.stub()\n      .returns(Promise.resolve({ status: BidResponse.AuctionClosed }));\n\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n\n    command.execute({ auctionId: 'aabbcc', chat: { id: 10, username: 'guglielmino' } }, [10])\n      .then((res) => {\n        commandHelper.simpleResponse\n          .calledWith(10, 'This auction is closed and can\\'t accept new bids')\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond Auction isn\\'t active when trying to bid on a not started one', (done) => {\n    auctionManager.bid = sinon.stub()\n      .returns(Promise.resolve({ status: BidResponse.AuctionNotActive }));\n\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n\n    command.execute({ auctionId: 'aabbcc', chat: { id: 10, username: 'guglielmino' } }, [10])\n      .then((res) => {\n        commandHelper.simpleResponse\n          .calledWith(10, 'Can\\'t bid on this Auction because is inactive')\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should send a message to all subscriber of Auction when bid accepted', (done) => {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n    auctionManager.bid = sinon.stub().returns(Promise.resolve(\n      {\n        status: BidResponse.Success,\n        auction: {\n          _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n          title: 'Commodore 64',\n          description: 'A beautiful Commodore 64!',\n          image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n          startDate,\n          startingPrice: 10,\n          price: 11,\n          owner: {\n            username: 'guglielmino',\n            chatId: 19915021\n          },\n          subscribers: [\n            { username: 'guglielmino', chatId: 123 },\n            { username: 'tizio', chatId: 234 },\n            { username: 'caio', chatId: 567 }\n          ],\n          bestBidder: {\n            username: 'caio',\n            chatId: 567\n          }\n        }\n      }));\n\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n    const mock = sinon.mock(command);\n    const expectation = mock.expects('_sendMessageToSubscriber').exactly(3);\n\n    command.execute({ auctionId: 'aabbcc', chat: { id: 123, username: 'guglielmino' } }, [10])\n      .then((res) => {\n        expectation.verify();\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond with min number of subscriber requests when bid and there are less than 10 subscribers', (done) => {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n    auctionManager.bid = sinon.stub().returns(Promise.resolve({\n      status: BidResponse.InsufficientSubscribers,\n      auction: {\n        _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n        title: 'Commodore 64',\n        description: 'A beautiful Commodore 64!',\n        image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n        startDate,\n        startingPrice: 10,\n        price: 11,\n        owner: {\n          username: 'guglielmino',\n          chatId: 19915021\n        },\n        subscribers: [\n          { username: 'guglielmino', chatId: 123 },\n          { username: 'tizio', chatId: 234 },\n          { username: 'caio', chatId: 567 }\n        ]\n      }\n    }));\n\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n\n    command.execute({ auctionId: 'aabbcc', chat: { id: 123, username: 'guglielmino' } }, [10])\n      .then((res) => {\n        commandHelper\n          .simpleResponse\n          .calledWith(123, 'We need at least *10* participants to start the Auction')\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond with and error when username is null', (done) => {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n    auctionManager.bid = sinon.stub().returns(Promise.resolve({\n      status: BidResponse.InsufficientSubscribers,\n      auction: {\n        _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n        title: 'Commodore 64',\n        description: 'A beautiful Commodore 64!',\n        image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n        startDate,\n        startingPrice: 10,\n        price: 11,\n        owner: {\n          username: 'guglielmino',\n          chatId: 19915021\n        },\n        subscribers: [\n          { username: 'guglielmino', chatId: 123 },\n          { username: 'tizio', chatId: 234 },\n          { username: 'caio', chatId: 567 }\n        ]\n      }\n    }));\n\n    const command = new BidCommand(telegram, managerFactory, commandHelper);\n\n    command.execute({ auctionId: 'aabbcc', chat: { id: 123, username: null } }, [10])\n      .then((res) => {\n        commandHelper.simpleResponse\n          .calledWith(123, 'Sorry, we have a problem with Your user, we can\\'t accept Your offer')\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/callbackquery/start-auction.cmd.spec.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nimport CommandHelper from '../../../../commands/command-helper';\nimport StartAuctionCommand from '../../../../commands/callbackquery/start-auction.cmd.js';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\n\ndescribe('StartAuctionCommand', () => {\n  let telegram;\n  let auctionManager;\n  let managerFactory;\n  let commandHelper;\n\n  beforeEach(() => {\n    telegram = {};\n\n    auctionManager = {};\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.answerCallbackQuery = sinon.stub();\n\n    commandHelper = sinon.stub(CommandHelper(telegram));\n  });\n\n  it('Should call _makeTelegramAnswer when subscription succeeds', (done) => {\n    const auction = require('./fixtures/subscribing-auction.json');\n\n    auctionManager.subscribe = sinon.stub()\n      .returns(Promise.resolve({ auction, status: { name: 'Success' } }));\n\n    const command = new StartAuctionCommand(telegram, managerFactory, commandHelper);\n    command._makeTelegramAnswer = sinon.stub();\n    command\n      .execute(\n        {\n          callback_query_id: 100,\n          chat: {\n            id: 10,\n            owner: { username: 'guglielmino', chatId: 2333030 }\n          }\n        }, '572c7066b3f30a0752a5f86d')\n      .then(res => {\n        res.auctionId.should.be.equal('572c7066b3f30a0752a5f86d');\n\n        command\n          ._makeTelegramAnswer\n          .calledOnce\n          .should.be.ok;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n\n  it('Should respond with \\'Sorry, this auction isn\\'t active You can\\'t start bidding on it.\\' when Auction is closes', (done) => {\n    auctionManager.subscribe = sinon.stub()\n      .returns(Promise.resolve({ status: { name: 'AuctionNotActive' } }));\n\n    const command = new StartAuctionCommand(telegram, managerFactory, commandHelper);\n    command.execute({\n      callback_query_id: 100,\n      chat: { id: 10, owner: { username: 'guglielmino', chatId: 2333030 } }\n    }, 123)\n      .then((res) => {\n        telegram\n          .sendMessage\n          .calledWith(sinon.match.has('text', 'Sorry, this auction isn\\'t active You can\\'t start bidding on it.'))\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should send a message to all subscriber but the one subscribing', (done) => {\n    const auction = require('./fixtures/subscribing-auction.json');\n    auctionManager.subscribe = sinon.stub()\n      .returns(Promise.resolve({ auction, status: { name: 'Success' } }));\n\n    const command = new StartAuctionCommand(telegram, managerFactory, commandHelper);\n    command._warnSubscribers = sinon.stub();\n    command.execute(\n      {\n        callback_query_id: 100,\n        chat: {\n          id: 10,\n          owner: { username: 'guglielmino', chatId: 2333030 }\n        }\n      }, 123)\n      .then(res => {\n        command\n          ._warnSubscribers\n          .calledOnce\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/auction-list.cmd.spec.js",["727","728","729","730","731","732","733","734","735","736"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionListCommand from '../../../../commands/interactive/auction-list.cmd';\n\ndescribe('AuctionListCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {};\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendPhoto = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    commandHelper = CommandHelper(telegram);\n    commandHelper.simpleResponse = sinon.stub();\n  });\n\n  it('Should respond with a message for the active auctions', (done) => {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n    auctionManager.getActiveAuctions = sinon.stub().returns(\n      Promise.resolve([\n        {\n          _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n          title: 'Commodore 64',\n          description: 'A beautiful Commodore 64!',\n          image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n          file_id: '123',\n          startDate,\n          startingPrice: 10,\n          price: 11,\n          owner: {\n            username: 'guglielmino',\n            chatId: 19915021\n          },\n          subscribers: [\n            { username: 'guglielmino' },\n            { username: 'tizio' },\n            { username: 'caio' }\n          ]\n        }\n      ])\n    );\n\n    const command = new AuctionListCommand(telegram, managerFactory, commandHelper, 'http://sampleurl.org');\n    command.execute({ chat: { id: 10 } })\n      .then(res => {\n        telegram.sendPhoto\n          .calledWith(\n            sinon.match.has('photo', '123'))\n          .should.be.ok;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond with a message informing there are no active auction with called with empty auction list', (done) => {\n    auctionManager.getActiveAuctions = sinon.stub()\n      .returns(Promise.resolve([]));\n\n    const command = new AuctionListCommand(telegram, managerFactory, commandHelper, 'http://sampleurl.org');\n    command.execute({ chat: { id: 10 } })\n      .then((res) => {\n        commandHelper\n          .simpleResponse\n          .calledWith(10, 'Sorry, no active Auctions now')\n          .should.be.ok;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/new-auction.cmd.spec.js",["737","738","739","740","741","742","743"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\nimport * as constants from '../../../../commands/consts';\n\nchai.should();\nconst expect = chai.expect;\n\nimport NewAuctionCommand from '../../../../commands/interactive/new-auction.cmd';\n\ndescribe('NewAuctionCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {};\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new NewAuctionCommand(telegram, commandHelper);\n  });\n\n  it('Should ask for name of the item of the Auction when called', (done) => {\n    command.execute({ chat: { id: 10 } }, [10])\n      .then((res) => {\n        commandHelper.simpleResponse\n          .calledWith(10, 'Ok, write the name of the item that You want to sell')\n          .should.be.ok;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set state in \\'WAITING_FOR_NAME\\' when called', (done) => {\n    command.execute({ chat: { id: 10 } }, [10])\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_NAME);\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/interactive/set-auction-property.cmd.spec.js",["744","745","746","747","748","749","750","751"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\nimport * as constants from '../../../../commands/consts';\n\nchai.should();\nconst expect = chai.expect;\n\nimport SetTitleCommand from '../../../../commands/interactive/set-auction-property.cmd';\n\ndescribe('SetAuctionPropertyCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {};\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new SetTitleCommand(telegram, managerFactory, commandHelper, {\n      queryCommand: constants.QCOMMAND_SET_DESCR, answerText: 'Choose an auction to change the description' });\n  });\n\n  it('Should respond with a list of buttons for each auction returned by the manager and right text', (done) => {\n    auctionManager.getAuctionsByOwner = sinon.stub()\n      .returns(Promise.resolve([\n        {\n          _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n          title: 'Commodore 64',\n          description: 'A beautiful Commodore 64!',\n          image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n          startingPrice: 10,\n          price: 11,\n          owner: {\n            username: 'guglielmino',\n            chatId: 19915021\n          }\n        }\n      ]));\n\n    command.execute({ chat: { id: 10, username: 'guglielmino' } })\n      .then((res) => {\n        telegram.sendMessage\n          .calledWith(\n            sinon.match(value => value.reply_markup.inline_keyboard.length === 1 && value.text === 'Choose an auction to change the description'))\n          .should.be.ok;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-description.cmd.spec.js",["752","753","754","755","756","757","758","759","760","761"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionDescriptionCommand from '../../../../commands/state/auction-description.cmd';\n\ndescribe('AuctionDescriptionCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {\n      updateAuction: (data) => Promise.resolve(true)\n    };\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new AuctionDescriptionCommand(telegram, managerFactory, commandHelper);\n  });\n\n  it('Should set state to STATE_WAIT_FOR_PRICE when no description is passed', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_DESC }, '')\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_DESC);\n        res.result.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set state to STATE_WAIT_FOR_PRICE when description is set', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_DESC }, 'A description')\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_PRICE);\n        res.result.should.be.true;\n        res.single.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set state to null when description is set and state.single is true', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_DESC, single: true }, 'A description')\n      .then((res) => {\n        expect(res.state)\n          .to.be.null;\n        res.result.should.be.true;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-min-sub.cmd.spec.js",["762","763","764","765","766","767","768","769","770"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionMinSubscribersCommand from '../../../../commands/state/auction-min-sub.cmd';\n\ndescribe('AuctionMinSubscribersCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {\n      updateAuction: (data) => Promise.resolve(true)\n    };\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new AuctionMinSubscribersCommand(telegram, managerFactory, commandHelper);\n  });\n\n  it('Should set state to null if min subscriber is greater or equal 0', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_MIN_SUB }, 6)\n      .then((res) => {\n        expect(res.state)\n          .to.be.null;\n        res.result.should.be.true;\n        res.single.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should still STATE_WAIT_FOR_MIN_SUB if min subscriber is lower than 0', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_MIN_SUB }, -3)\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_MIN_SUB);\n        res.result.should.be.false;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-name.cmd.spec.js",["771","772","773","774","775","776","777","778","779","780","781","782"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionNameCommand from '../../../../commands/state/auction-name.cmd';\n\ndescribe('AuctionNameCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {\n      createAuction: (title) => Promise.resolve(ObjectID()),\n      updateAuction: (auctionId, obj) => Promise.resolve(true)\n    };\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new AuctionNameCommand(telegram, managerFactory, commandHelper);\n  });\n\n  it('Should set state to STATE_WAIT_FOR_DESC when suceed', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_NAME }, 'Auction title')\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_DESC);\n        res.auctionId.should.not.be.null;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set state to null when succeed and was passed an auctionId and single is true', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_NAME, auctionId: 12344, single: true }, 'Auction title')\n      .then((res) => {\n        expect(res.state)\n          .to.be.null;\n        res.result.should.be.true;\n        res.single.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-picture.cmd.spec.js",["783","784","785","786","787","788","789","790","791","792","793"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionPictureCommand from '../../../../commands/state/auction-picture.cmd';\n\ndescribe('AuctionPictureCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {\n      updateAuction: (auctionId, obj) => Promise.resolve(true)\n    };\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    const S3Obj = {\n      urlToS3: (url) => Promise.resolve({ Location: 'http://testurl.org' })\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    telegram.getFile = sinon.stub().returns(Promise.resolve({\n      file_id: 'AgADAgAD06cxGw3hLwGb_9jqy3vP7rM1cQ0ABNh-NRlQBdiBNCcAAgI',\n      file_url: 'http://sample'\n    }));\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new AuctionPictureCommand(telegram, managerFactory, commandHelper, S3Obj);\n  });\n\n  it('Should set state to STATE_WAIT_FOR_MIN_SUB when a picture is received', (done) => {\n    command\n      .execute({\n        chat: { id: 10 },\n        auctionId: '123444',\n        state: constants.STATE_WAIT_FOR_PICTURE\n      },\n      [\n        {\n          file_id: 'AgADAgAD06cxGw3hLwGb_9jqy3vP7rM1cQ0ABNh-NRlQBdiBNCcAAgI',\n          file_size: 1649,\n          width: 90,\n          height: 64\n        },\n        {\n          file_id: 'AgADAgAD06cxGw3hLwGb_9jqy3vP7rM1cQ0ABP7f6Nl3TVFINScAAgI',\n          file_size: 17505,\n          width: 320,\n          height: 227\n        }])\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_MIN_SUB);\n        res.result.should.be.true;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set state to null when a picture is received and state.single is true', (done) => {\n    command\n      .execute({\n        chat: { id: 10 },\n        auctionId: '123444',\n        state: constants.STATE_WAIT_FOR_PICTURE,\n        single: true\n      },\n      [\n        {\n          file_id: 'AgADAgAD06cxGw3hLwGb_9jqy3vP7rM1cQ0ABNh-NRlQBdiBNCcAAgI',\n          file_size: 1649,\n          width: 90,\n          height: 64\n        },\n        {\n          file_id: 'AgADAgAD06cxGw3hLwGb_9jqy3vP7rM1cQ0ABP7f6Nl3TVFINScAAgI',\n          file_size: 17505,\n          width: 320,\n          height: 227\n        }])\n      .then((res) => {\n        expect(res.state)\n          .to.be.null;\n\n        res.result.should.be.true;\n        res.single.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/commands/state/auction-price.cmd.spec.js",["794","795","796","797","798","799","800","801","802","803","804"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nchai.should();\nconst expect = chai.expect;\n\nimport AuctionPriceCommand from '../../../../commands/state/auction-price.cmd';\n\ndescribe('AuctionPriceCommand', () => {\n  let telegram;\n  let managerFactory;\n  let auctionManager;\n  let commandHelper;\n  let command;\n\n  beforeEach(() => {\n    telegram = {};\n    auctionManager = {\n      updateAuction: (data) => Promise.resolve(true)\n    };\n\n    managerFactory = {\n      getAuctionManager: () => auctionManager\n    };\n\n    telegram.sendMessage = sinon.stub();\n    telegram.sendChatAction = sinon.stub();\n    commandHelper = sinon.stub(CommandHelper(telegram));\n    command = new AuctionPriceCommand(telegram, managerFactory, commandHelper);\n  });\n\n  it('Should respond with result false and maintain STATE_WAIT_FOR_PRICE when price is lower than 0', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_PRICE }, '-1')\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_PRICE);\n        res.result.should.be.false;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond with result false and maintain STATE_WAIT_FOR_PRICE when price isn\\'t numeric', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_PRICE }, '-1')\n      .then((res) => {\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_PRICE);\n        res.result.should.be.false;\n\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should respond with result true when price is number greather than 0', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_PRICE }, '10.7')\n      .then((res) => {\n        res.result.should.be.true;\n        res.state.should.be.equal(constants.STATE_WAIT_FOR_PICTURE);\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should set status to null when state.single is true', (done) => {\n    command\n      .execute({ chat: { id: 10 }, state: constants.STATE_WAIT_FOR_PRICE, single: true }, '10.7')\n      .then((res) => {\n        res.result.should.be.true;\n        expect(res.state).to.be.null;\n        res.single.should.be.false;\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-ages.spec.js",["805","806","807","808"],"'use strict';\n\nimport fs from 'fs';\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nimport AuctionAges from '../../../services/domain/auction-ages';\n\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\nconst readFixture = (fixtureName, cb) => {\n  fs.readFile(`${__dirname}/fixtures/${fixtureName}`, (err, data) => {\n    if (err) throw err;\n    const request = JSON.parse(data.toString());\n    cb(request);\n  });\n};\n\n\ndescribe('AuctionAges', () => {\n  let auctionAges;\n\n  function testMessage(age, awaited, done) {\n    readFixture('sample-auction.json', (auction) => {\n      auction.bidAge = age;\n      const msg = auctionAges.getMessage(auction);\n\n      msg.message.should.be.equal(awaited);\n\n      done();\n    });\n  }\n\n  beforeEach(() => {\n    auctionAges = AuctionAges();\n  });\n\n  it('Should return message for 65s age old auction', (done) => {\n    testMessage(65, 'No one offer more than € 28 ?', done);\n  });\n\n  it('Should return message for 70s age old auction', (done) => {\n    testMessage(70, 'Come on, don\\'t be shy, make an offer', done);\n  });\n\n  it('Should return message for 90s age old auction', (done) => {\n    testMessage(90, '*€ 28* and one', done);\n  });\n\n  it('Should return message for 95s age old auction', (done) => {\n    testMessage(95, '*€ 28* and two', done);\n  });\n\n  it('Should return message for 100s age old auction', (done) => {\n    testMessage(100, '*€ 28* and three', done);\n  });\n\n  it('Should return message for 103s age old auction', (done) => {\n    testMessage(103, '*Commodore 64* sold for *€ 28* to @guglielmino  💰', done);\n  });\n\n  it('Should return isLast for 103s age old auction', (done) => {\n    readFixture('sample-auction.json', (auction) => {\n      auction.bidAge = 103;\n      const msg = auctionAges.getMessage(auction);\n\n      msg.isLast.should.be.true;\n\n      done();\n    });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-approver.spec.js",["809","810","811","812","813","814"],"'use strict';\n\nimport fs from 'fs';\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nimport AuctionApprover from '../../../services/domain/auction-approver';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\ndescribe('AuctionApprover', () => {\n  let auctionApprover;\n  let telegram;\n  let auctionManager;\n\n  beforeEach((done) => {\n    const fixtureData = fs.readFileSync(`${__dirname}/fixtures/auction-to-be-approved.json`);\n    const auction = JSON.parse(fixtureData);\n    telegram = {};\n    telegram.sendMessage = sinon.stub();\n\n    auctionManager = {};\n    auctionManager.getAuctionById = sinon.stub().returns(Promise.resolve(auction));\n    auctionManager.updateAuction = sinon.stub().returns(Promise.resolve(true));\n\n    auctionApprover = AuctionApprover(telegram, auctionManager);\n    done();\n  });\n\n  it('Should send message to auction\\'s owner after approving it', (done) => {\n    auctionApprover\n      .approve('572c7066b3f30a0752a5f86d', new Date('2016-08-01T10:00:00.000Z'))\n      .then(res => {\n        telegram\n          .sendMessage\n          .calledWith(sinon.match.has('chat_id', 19915021))\n          .should.be.true;\n        done();\n      })\n      .catch(err => done(err));\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-chant.spec.js",["815","816","817","818"],"'use strict';\n\nimport fs from 'fs';\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nimport AuctionChant from '../../../services/domain/auction-chant';\n\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\n\ndescribe('AuctionChant', () => {\n  let auctionChant;\n  let auctionManager;\n  let auctionAges;\n\n  beforeEach(() => {\n    auctionAges = { };\n\n    const data = fs.readFileSync(`${__dirname}/fixtures/auction-list.json`);\n    const auctionList = JSON.parse(data.toString());\n\n    const telegram = {};\n    telegram.sendMessage = sinon.stub();\n\n    auctionManager = {\n      closeAuction: sinon.stub(),\n      getRunningAuctionsBidAge: sinon.stub()\n        .returns(Promise.resolve(auctionList))\n    };\n\n\n    auctionChant = AuctionChant(telegram, auctionManager, auctionAges);\n  });\n\n\n  it('Should respond with num of handled auctions', (done) => {\n    auctionAges.getMessage = sinon.stub()\n      .returns({ message: 'Sample', isLast: false });\n\n    auctionChant\n      .make(new Date('2016-07-17T06:11:00.007Z'))\n      .then((res) => {\n        res.should.be.equal(2);\n        done();\n      });\n  });\n\n  it('Should call closeAuction when auction receive last chant', (done) => {\n    auctionAges.getMessage = sinon.stub()\n      .returns({ message: 'Sample', isLast: true });\n\n    auctionChant\n      .make(new Date('2016-07-17T06:11:00.007Z'))\n      .then((res) => {\n        res.should.be.equal(2);\n        auctionManager.closeAuction\n          .calledOnce.should.be.true;\n\n        done();\n      })\n      .catch(err => done(err));\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/auction-manager.spec.js",["819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport fs from 'fs';\nimport AuctionManager from '../../../services/domain/auction-manager';\nimport { BidResponse } from '../../../services/domain/auction-manager';\nimport { ObjectID } from 'mongodb';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\n\ndescribe('AuctionManager', () => {\n  it('Should succeed when bid on a existent Auction with a value greater than current price', (done) => {\n    const auctionProvider = {};\n\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'Commodore 64',\n      description: 'A beautiful Commodore 64!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate,\n      startingPrice: 10,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      },\n      minSubscribers: 0\n\n    }));\n\n    auctionProvider.addBid = sinon.stub().returns(Promise.resolve(true));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 10.2)\n      .then((res) => {\n        res.status.should.be.equal(BidResponse.Success);\n        done();\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should bid with default auction increment when bid without a value', (done) => {\n    const auctionProvider = {};\n\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - 1);\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'Commodore 64',\n      description: 'A beautiful Commodore 64!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate,\n      startingPrice: 10,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      },\n      bidStep: 2,\n      minSubscribers: 0\n    }));\n\n    auctionProvider.addBid = sinon.stub().returns(Promise.resolve(true));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c2123'), { username: 'guglielmino' })\n      .then((res) => {\n        res.status.should.be.equal(BidResponse.Success);\n        res.auction.price.should.be.equal(12);\n        done();\n      })\n      .catch((err) => {\n        console.log(err.message);\n        done(err);\n      });\n  });\n\n  it('Should fail when bid called on not already started Auction', (done) => {\n    const auctionProvider = {};\n\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() + 1);\n\n    auctionProvider.getAuctionById = auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'Commodore 64',\n      description: 'A beautiful Commodore 64!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate,\n      startingPrice: 10,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      }\n    }));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 10.2)\n      .then((res) => {\n        res.status.should.be.equal(BidResponse.AuctionNotActive);\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n\n  it('Should fail when bid called on a inexistent Auction', (done) => {\n    const auctionProvider = {};\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({}));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 10.2)\n      .then((res) => {\n        res.status.name.should.be.equal('AuctionNotExist');\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n\n  it('Should fail when bid called a value less than current Auction\\'s value', (done) => {\n    const auctionProvider = {};\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'aaa',\n      description: 'Csdfdsfdssdori!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate: Date('2016-06-14T22:00:00.000Z'),\n      startingPrice: 10,\n      price: 10.2,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      }\n    }));\n\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 10)\n      .then((res) => {\n        res.status.name.should.be.equal('ValueToLow');\n        done();\n      })\n      .catch((err) => {\n        console.log(err.message);\n        done(err);\n      });\n  });\n\n  it('Should fail when bid on a Auction with less than 3 subscribers', (done) => {\n    const auctionProvider = {};\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'aaa',\n      description: 'Csdfdsfdssdori!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate: Date('2016-06-14T22:00:00.000Z'),\n      startingPrice: 10,\n      price: 10.2,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      },\n      minSubscribers: 3,\n      subscribers: [\n        { username: 'alpha', chatId: 1234 },\n        { username: 'beta', chatId: 5678 }\n      ]\n    }));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 100)\n      .then((res) => {\n        res.status.name.should.be.equal('InsufficientSubscribers');\n        done();\n      })\n      .catch((err) => {\n        console.log(err.message);\n        done(err);\n      });\n  });\n\n  it('Should fail when bid on a closed Auction', (done) => {\n    const auctionProvider = {};\n\n    auctionProvider.getAuctionById = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'aaa',\n      description: 'Csdfdsfdssdori!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate: Date('2016-06-14T22:00:00.000Z'),\n      startingPrice: 10,\n      price: 10.2,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      },\n      minSubscribers: 3,\n      subscribers: [\n        { username: 'alpha', chatId: 1234 },\n        { username: 'beta', chatId: 5678 }\n      ],\n      closed: true\n\n    }));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n    auctionManager.bid(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'guglielmino' }, 100)\n      .then((res) => {\n        res.status.name.should.be.equal('AuctionClosed');\n        done();\n      })\n      .catch((err) => {\n        console.log(err.message);\n        done(err);\n      });\n  });\n\n  it('Should subscribe user to Auction when called', (done) => {\n    const auctionProvider = {};\n\n    auctionProvider.getAuctionsBySubscriber = sinon.stub().returns(Promise.resolve([]));\n    auctionProvider.addSubscriberToAuction = sinon.stub().returns(Promise.resolve({\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'aaa',\n      description: 'Csdfdsfdssdori!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate: Date('2016-06-14T22:00:00.000Z'),\n      startingPrice: 10,\n      price: 10.2,\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      },\n      subscribers: [{ username: 'mimmo', chatId: 12345 }]\n    }));\n    const auctionManager = new AuctionManager(auctionProvider);\n\n    auctionManager.subscribe(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'mimmo' })\n      .then((res) => {\n        res.status.name.should.be.equal('Success');\n        res.auction.should.not.be.null;\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n\n  it('Should not subscribe an Auction when user is active on another one', (done) => {\n    const auctionProvider = {};\n\n\n    auctionProvider.getAuctionsBySubscriber = sinon.stub().returns(Promise.resolve([{\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'aaa',\n      description: 'Csdfdsfdssdori!',\n      image: 'http://www.oldcomputers.net/pics/C64-left.jpg',\n      startDate: Date('2016-06-14T22:00:00.000Z'),\n      startingPrice: 10,\n      price: 10.2,\n      subscribers: [{ username: 'mimmo', chatId: 1234 }],\n      owner: {\n        username: 'guglielmino',\n        chatId: 19915021\n      }\n    }]));\n    const auctionManager = new AuctionManager(auctionProvider);\n\n    auctionManager.subscribe(ObjectID('572cc825de91f5b2bc3c24d8'), { username: 'mimmo' })\n      .then((res) => {\n        res.status.name.should.be.equal('MultipleAuctionSubscribe');\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n\n  it('Should return a list of Acution ', (done) => {\n    const auctionProvider = {};\n\n    let oneMinutesAgo = new Date(), tenSeconsAgo = new Date();\n    oneMinutesAgo.setMinutes(oneMinutesAgo.getMinutes() - 1);\n\n    tenSeconsAgo.setSeconds(tenSeconsAgo.getSeconds() - 10);\n\n    auctionProvider.getRunningAuctions = sinon.stub().returns(Promise.resolve([{\n      _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n      title: 'title1',\n      description: 'description1',\n      image: 'http://www.nowhere.og/img2.jpg',\n      startDate: new Date(),\n      startingPrice: 10,\n      price: 10.2,\n      subscribers: [{ username: 'fake1', chatId: 123 }],\n      owner: {\n        username: 'auctionusr',\n        chatId: 19915021\n      },\n      lastBid: oneMinutesAgo\n    },\n    {\n      _id: ObjectID('572cc825de91f5b2bc3c18a4'),\n      title: 'title2',\n      description: 'description2',\n      image: 'http://www.nowhere.og/img2.jpg',\n      startDate: new Date(),\n      startingPrice: 10,\n      price: 10.2,\n      subscribers: [{ username: 'fake2', chatId: 5678 }],\n      owner: {\n        username: 'auctionusr',\n        chatId: 19915021\n      },\n      lastBid: tenSeconsAgo\n    }]));\n    const auctionManager = new AuctionManager(auctionProvider);\n\n    auctionManager.getRunningAuctionsBidAge(new Date(), 60)\n      .then((res) => {\n        res.length.should.be.equal(1);\n        res[0].bidAge.should.exists;\n\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n\n  it('Should return a list of Acution editable by the user', (done) => {\n    const auctionProvider = {};\n\n\n    auctionProvider.getAuctionsByOwner = sinon.stub().returns(Promise.resolve([\n      {\n        _id: ObjectID('572cc825de91f5b2bc3c24d8'),\n        title: 'title1',\n        description: 'description1',\n        image: 'http://www.nowhere.og/img2.jpg',\n        startDate: new Date(),\n        startingPrice: 10,\n        price: 10.2,\n        subscribers: [{ username: 'fake1', chatId: 123 }],\n        owner: {\n          username: 'auctionusr',\n          chatId: 19915021\n        },\n        lastBid: new Date()\n      },\n      {\n        _id: ObjectID('572cc825de91f5b2bc3c18a4'),\n        title: 'title2',\n        description: 'description2',\n        image: 'http://www.nowhere.og/img2.jpg',\n        startDate: new Date(),\n        startingPrice: 10,\n        price: 10.2,\n        subscribers: [{ username: 'fake2', chatId: 5678 }],\n        owner: {\n          username: 'auctionusr',\n          chatId: 19915021\n        }\n      }]));\n\n    const auctionManager = new AuctionManager(auctionProvider);\n\n    auctionManager.getAuctionsByOwner('auctionusr')\n      .then((res) => {\n        res.length.should.be.equal(1);\n        expect(res[0].lastBid)\n          .to.be.empty;\n\n        done();\n      })\n      .catch((err) => {\n        console.log(err);\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/notifications/auction-end-notification.spec.js",["843","844","845","846","847","848"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport AuctionEndNotification from '../../../../services/domain/notifications/auction-end-notification';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\n\ndescribe('AuctionEndNotification', () => {\n  let auctionEndNotification;\n  let telegram;\n\n  beforeEach(() => {\n    telegram = {};\n    telegram.sendMessage = sinon.stub().returns(Promise.resolve(null));\n\n\n    const auctionManager = {\n      getClosedAndWaitingForPayment: sinon.stub().returns(\n        Promise.resolve(require('../fixtures/closed-auctions.json'))\n      ),\n      updateAuction: sinon.stub()\n    };\n\n    const managerFactory = {\n      getAuctionManager() {\n        return auctionManager;\n      }\n    };\n\n    auctionEndNotification = AuctionEndNotification(telegram,\n      managerFactory);\n  });\n\n  it('Should notificate auction winner and owner', (done) => {\n    auctionEndNotification\n      .sendNotification(new Date(), '123')\n      .then(sent => {\n        telegram\n          .sendMessage\n          .callCount.should.be.equal(4);\n        done();\n      })\n      .catch(err => {\n        done(err);\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/domain/notifications/auction-start-notification.spec.js",["849","850","851","852","853","854","855","856","857","858","859","860"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport AuctionStartNotification from '../../../../services/domain/notifications/auction-start-notification';\n\nimport { ObjectID } from 'mongodb';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\n\ndescribe('AuctionStartNotification', () => {\n  let auctionStartNotification;\n  let telegram;\n\n  beforeEach(() => {\n    telegram = {};\n    telegram.sendMessage = sinon.stub();\n\n    const userManager = {\n      getAll: sinon.stub()\n        .returns(\n          Promise.resolve(require('../fixtures/users.json'))\n        )\n    };\n\n    const auctionManager = {\n      getStarting: sinon.stub().returns(\n        Promise.resolve(require('../fixtures/starting-auctions.json'))\n      )\n    };\n\n\n    const managerFactory = {\n      getUserManager() {\n        return userManager;\n      },\n      getAuctionManager() {\n        return auctionManager;\n      }\n    };\n\n    auctionStartNotification = AuctionStartNotification(telegram,\n      managerFactory);\n  });\n\n  it('Should call sendMessage for all 3 users', (done) => {\n    auctionStartNotification\n      .sendNotification(new Date(), 'http://astone.gumino.com/pages/auction')\n      .then(sent => {\n        telegram.sendMessage\n          .calledThrice\n          .should.be.true;\n\n        done();\n      });\n  });\n\n  it('Should call sendmessage with reply_markup', (done) => {\n    auctionStartNotification\n      .sendNotification(new Date(), 'http://astone.gumino.com/pages/auction')\n      .then(sent => {\n        telegram.sendMessage\n          .calledWith(sinon.match.has('reply_markup'))\n          .should.be.true;\n\n        done();\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/state-manager.spec.js",["861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\n\nchai.should();\n\nconst expect = chai.expect;\nimport StateManager from '../../../../services/bot/state-manager';\nimport redis from 'redis-mock';\n\nPromise.promisifyAll(redis.RedisClient.prototype);\n\n\ndescribe('StateManager', () => {\n  let stateManager;\n\n  beforeEach((done) => {\n    const client = redis.createClient();\n    stateManager = StateManager(client);\n\n    stateManager\n      .del('sample')\n      .then((res) => {\n        done();\n      });\n  });\n\n  it('Should get state prevously set for key \\'sample\\'', (done) => {\n    stateManager\n      .setState('sample', { name: 1, last: true })\n      .then((res) => {\n        stateManager\n          .getState('sample')\n          .then((state) => {\n            state.should.to.haveOwnProperty('name');\n            state.should.to.haveOwnProperty('last');\n            done();\n          });\n      })\n      .catch((err) => {\n        done(err);\n      });\n  });\n\n  it('Should return \\'null\\' when try to get inexistent key', (done) => {\n    stateManager.getState('fakekey')\n      .then((state) => {\n        expect(state).to.be.null;\n        done();\n      });\n  });\n\n  it('Should update state when called with a new field and value', (done) => {\n    stateManager\n      .setState('sample', { name: 'Sample name', last: false })\n      .then((res) => stateManager.updateState('sample', { newkey: 'newvalue' }))\n      .then((state) => {\n        state.should.to.haveOwnProperty('name');\n        state.should.to.haveOwnProperty('last');\n        state.should.to.haveOwnProperty('newkey');\n        done();\n      });\n  });\n\n  it('Should throw exception when update is called without an object', () => {\n    stateManager.setState('sample', { name: 5, last: false });\n    expect(() => {\n      stateManager.updateState('sample', 'newvalue');\n    }).to.throws(\"\\'value\\' must be an object\");\n  });\n\n  it('Should return \\'true\\' when exists method called for a valid key', (done) => {\n    stateManager\n      .setState('exkey', { color: 'Red', price: 100 })\n      .then((res) => {\n        stateManager.exists('exkey')\n          .then((exist) => {\n            exist.should.be.true;\n            done();\n          });\n      });\n  });\n\n  it('Should return \\'false\\' when exists method called for not valid key', (done) => {\n    const exist = stateManager.exists('nokey')\n      .then((exist) => {\n        exist.should.be.false;\n        done();\n      });\n  });\n\n  it('Should delete partial state', (done) => {\n    stateManager\n      .setState('sample', { name: 'my name', last: false })\n      .then((res) => stateManager\n        .updateState('sample', { last: null }))\n      .then((res) => stateManager.getState('sample'))\n      .then((state) => {\n        expect(state.last).to.be.null;\n        done();\n      });\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/telegram-chatter.spec.js",["880","881","882","883"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport redis from 'redis-mock';\n\nchai.should();\n\nimport TelegramChatter from '../../../../services/bot/telegram-chatter';\nimport StateManager from '../../../../services/bot/state-manager';\n\ndescribe('TelegramChatter', () => {\n  let chatter;\n  let stateManager;\n\n  beforeEach(() => {\n    const client = redis.createClient();\n    stateManager = sinon.stub(StateManager(client));\n    chatter = new TelegramChatter(stateManager);\n  });\n\n  it('Should throw exception if request type is not right', () => {\n    (() => {\n      chatter.processRequest({});\n    }).should.throw(TypeError);\n  });\n\n\n  it('Should call updateState of stateManager when command.execute returns an object', () => {\n    const command = { cmd: { } };\n    command.cmd.execute = sinon.stub()\n      .returns(Promise.resolve({ a: 1, b: 2 }));\n\n    const state = { chat: { id: 1 } };\n    chatter._executeCommand(command, state, 'sample data');\n\n    // NOTE: TO BAD!!! This implies a design flaw (TO BE REFACTORED!)\n    setTimeout(() => {\n      stateManager\n        .updateState\n        .calledOnce.should.be.true;\n    }, 500);\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/services/bot/telegram-req-parser.spes.js",["884"],"/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/cipher.spec.js",["885"],"/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/i18n.spec.js",["886","887","888","889","890","891"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport I18nBuild from '../../../services/utilities/i18n';\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\ndescribe('i18n', () => {\n  it('Should traslate \"Hello ${name}\" with \"it\" messageBundle', () => {\n    const en = {\n      'Hello {0}': 'Hello {0}'\n    };\n\n    const it = {\n      'Hello {0}': 'Ciao {0}'\n    };\n\n    const name = 'Fabrizio';\n\n    const i18n = I18nBuild({ locale: 'it', defaultCurrency: 'EUR', messageBundle: it });\n    const res = i18n`Hello ${name}`;\n\n    res.should.be.equal('Ciao Fabrizio');\n  });\n\n  it('Should return original string when translation does not exists', () => {\n    const en = {\n      'Hello {0}': 'Hello {0}'\n    };\n\n    const it = {\n      'Hello {0}': 'Ciao {0}'\n    };\n\n    const test = 'test';\n\n    const i18n = I18nBuild({ locale: 'it', defaultCurrency: 'EUR', messageBundle: it });\n    const res = i18n`${test} string not mapped`;\n\n    res.should.be.equal('test string not mapped');\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/test/unit/utilities/msg-encoder.spec.js",["892","893","894"],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport MsgEncoder from '../../../services/utilities/msg-encoder';\n\n\n// Tell chai that we'll be using the \"should\" style assertions.\nchai.should();\nconst expect = chai.expect;\n\ndescribe('MsgEncoder', () => {\n  let encoder;\n\n  beforeEach(() => {\n    encoder = new MsgEncoder();\n  });\n\n  it('Should return an encoded string when called with an object', () => {\n    const sampleObj = { name: 'Fabrizio', age: 40 };\n    const result = encoder.encode(sampleObj);\n\n    result.should.be.a('string');\n  });\n\n  it('Should decode an object previous encoded', () => {\n    const sampleObj = { name: 'Fabrizio', age: 40 };\n    const result = encoder.encode(sampleObj);\n    const decodedObj = encoder.decode(result);\n    decodedObj.name.should.be.equal(sampleObj.name);\n  });\n});\n","/Users/guglielmino/Sources/my/astone-bot/server/web/index.js",["895"],"/Users/guglielmino/Sources/my/astone-bot/server/web/messenger.routes.js",["896","897","898","899","900"],"'use strict';\n\nimport * as urlConsts from './url-consts';\nimport logger from '../services/logger';\n\nexport default (router, config, logger) => {\n  router.get(urlConsts.API_MESSENGER_UPDATE, async (ctx) => {\n    if (ctx.request.query['hub.mode'] === 'subscribe'\n      && ctx.request.query['hub.verify_token'] === config.messenger.validation_token) {\n      logger.debug('Validating webhook');\n      ctx.status = 200;\n      ctx.body = ctx.request.query['hub.challenge'];\n    } else {\n      logger.debug('Failed validation. Make sure the validation tokens match.');\n      ctx.status = 403;\n    }\n  });\n\n  router.post(urlConsts.API_MESSENGER_UPDATE, async (ctx) => {\n    const data = ctx.request.body;\n\n    if (data.object == 'page') {\n      // Iterate over each entry\n      // There may be multiple if batched\n      data.entry.forEach((pageEntry) => {\n        const pageID = pageEntry.id;\n        const timeOfEvent = pageEntry.time;\n\n        // Iterate over each messaging event\n        pageEntry.messaging.forEach((messagingEvent) => {\n          logger.debug(messagingEvent);\n        });\n      });\n\n      // Assume all went well.\n      //\n      // You must send back a 200, within 20 seconds, to let us know you've\n      // successfully received the callback. Otherwise, the request will time out.\n      ctx.status = 200;\n    }\n  });\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/web/pages.route.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/web/payment.route.js",["901","902","903","904"],"'use strict';\n\nimport * as urlConsts from './url-consts';\nimport Cipher from '../services/utilities/cipher';\n\nexport default (router, auctionManager, paypal, config) => {\n  // Es callback paypal http://nowhere.org/return?paymentId=PAY-6P430325F55175532K5C476I&token=EC-5BD73754780107705&PayerID=T4BJ6XB5ZJM6G\n  router.get(urlConsts.API_PAYPAL_SUCCESS, async (ctx) => {\n    ctx.status = 200;\n  });\n\n  router.get(urlConsts.API_PAYPAL_CANCEL, async (ctx) => {\n    ctx.status = 200;\n  });\n\n  // TODO: Querystring with encrypted auction id to get payment data\n  router.get(urlConsts.PAGE_PAYPAL_GETPAYURL, async (ctx) => {\n    console.log(`TOK ${ctx.request.query.token}`);\n    const auctionId = new Cipher().decrypt(ctx.request.query.token, config.cipher_password);\n    console.log(`Auction Id ${auctionId}`);\n\n    await auctionManager\n      .getAuctionById(auctionId)\n      .then((auction) => {\n        paypal\n          .getPayRedirectUrl(auction.title, auction.price, 'EUR')\n          .then((redirect_url) => {\n            ctx.status = 301;\n            ctx.redirect(redirect_url);\n            ctx.body = 'Redirecting to PayPal';\n          });\n      })\n      .catch((err) => {\n        logger.error(err.message);\n        ctx.status = 500;\n      });\n  });\n};\n","/Users/guglielmino/Sources/my/astone-bot/server/web/telegram.route.js",[],"/Users/guglielmino/Sources/my/astone-bot/server/web/url-consts.js",[],{"ruleId":"905","severity":2,"message":"906","line":113,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":34,"column":41},{"ruleId":"910","severity":2,"message":"911","line":11,"column":1,"nodeType":"912","endLine":11,"endColumn":25,"fix":"913"},{"ruleId":"914","severity":1,"message":"915","line":35,"column":14,"nodeType":"916","messageId":"917","endLine":35,"endColumn":23},{"ruleId":"918","severity":2,"message":"919","line":45,"column":52,"nodeType":"920","endLine":45,"endColumn":94},{"ruleId":"921","severity":2,"message":"922","line":45,"column":112,"nodeType":"923","endLine":45,"endColumn":123},{"ruleId":"924","severity":1,"message":"925","line":46,"column":15,"nodeType":"923","messageId":"926","endLine":46,"endColumn":26},{"ruleId":"924","severity":1,"message":"925","line":49,"column":13,"nodeType":"923","messageId":"926","endLine":49,"endColumn":24},{"ruleId":"924","severity":1,"message":"925","line":54,"column":11,"nodeType":"923","messageId":"926","endLine":54,"endColumn":22},{"ruleId":"914","severity":1,"message":"915","line":59,"column":17,"nodeType":"916","messageId":"917","endLine":59,"endColumn":26},{"ruleId":"927","severity":2,"message":"928","line":61,"column":7,"nodeType":"929","endLine":61,"endColumn":16},{"ruleId":"927","severity":2,"message":"930","line":75,"column":16,"nodeType":"929","endLine":75,"endColumn":19},{"ruleId":"924","severity":1,"message":"925","line":78,"column":25,"nodeType":"923","messageId":"926","endLine":78,"endColumn":36},{"ruleId":"914","severity":1,"message":"915","line":82,"column":16,"nodeType":"916","messageId":"917","endLine":82,"endColumn":25},{"ruleId":"927","severity":2,"message":"930","line":90,"column":16,"nodeType":"929","endLine":90,"endColumn":19},{"ruleId":"924","severity":1,"message":"925","line":93,"column":25,"nodeType":"923","messageId":"926","endLine":93,"endColumn":36},{"ruleId":"927","severity":2,"message":"931","line":101,"column":81,"nodeType":"929","endLine":101,"endColumn":85},{"ruleId":"927","severity":2,"message":"932","line":101,"column":87,"nodeType":"929","endLine":101,"endColumn":94},{"ruleId":null,"fatal":true,"severity":2,"message":"933","line":8,"column":19},{"ruleId":"914","severity":1,"message":"915","line":5,"column":36,"nodeType":"916","messageId":"917","endLine":5,"endColumn":45},{"ruleId":"914","severity":1,"message":"915","line":26,"column":39,"nodeType":"916","messageId":"917","endLine":26,"endColumn":48},{"ruleId":"914","severity":1,"message":"915","line":38,"column":37,"nodeType":"916","messageId":"917","endLine":38,"endColumn":46},{"ruleId":"934","severity":2,"message":"935","line":55,"column":1,"nodeType":"907","endLine":56,"endColumn":1,"fix":"936"},{"ruleId":"937","severity":2,"message":"938","line":83,"column":18,"nodeType":"929","messageId":"939","endLine":83,"endColumn":25},{"ruleId":"937","severity":2,"message":"938","line":84,"column":86,"nodeType":"929","messageId":"939","endLine":84,"endColumn":93},{"ruleId":"937","severity":2,"message":"940","line":93,"column":14,"nodeType":"929","messageId":"939","endLine":93,"endColumn":22},{"ruleId":"927","severity":2,"message":"941","line":96,"column":11,"nodeType":"929","endLine":96,"endColumn":18},{"ruleId":"937","severity":2,"message":"942","line":112,"column":23,"nodeType":"929","messageId":"939","endLine":112,"endColumn":40},{"ruleId":"937","severity":2,"message":"943","line":142,"column":11,"nodeType":"929","messageId":"939","endLine":142,"endColumn":18},{"ruleId":"937","severity":2,"message":"943","line":143,"column":79,"nodeType":"929","messageId":"939","endLine":143,"endColumn":86},{"ruleId":"921","severity":2,"message":"944","line":5,"column":5,"nodeType":"923","endLine":5,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":6,"column":5,"nodeType":"923","endLine":6,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":17},{"ruleId":"921","severity":2,"message":"947","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":23},{"ruleId":"948","severity":2,"message":"949","line":12,"column":3,"nodeType":"916","messageId":"950"},{"ruleId":"921","severity":2,"message":"946","line":15,"column":7,"nodeType":"923","endLine":15,"endColumn":19},{"ruleId":"921","severity":2,"message":"947","line":17,"column":11,"nodeType":"923","endLine":17,"endColumn":29},{"ruleId":"921","severity":2,"message":"944","line":19,"column":7,"nodeType":"923","endLine":19,"endColumn":21},{"ruleId":"921","severity":2,"message":"947","line":22,"column":39,"nodeType":"923","endLine":22,"endColumn":57},{"ruleId":"921","severity":2,"message":"944","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":10,"column":5,"nodeType":"923","endLine":10,"endColumn":17},{"ruleId":"921","severity":2,"message":"951","line":12,"column":5,"nodeType":"923","endLine":12,"endColumn":20},{"ruleId":"921","severity":2,"message":"944","line":18,"column":9,"nodeType":"923","endLine":18,"endColumn":23},{"ruleId":"921","severity":2,"message":"952","line":23,"column":13,"nodeType":"923","endLine":24,"endColumn":40},{"ruleId":"927","severity":2,"message":"953","line":27,"column":28,"nodeType":"929","endLine":27,"endColumn":35},{"ruleId":"921","severity":2,"message":"944","line":28,"column":9,"nodeType":"923","endLine":28,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":30,"column":9,"nodeType":"923","endLine":30,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":33,"column":9,"nodeType":"923","endLine":33,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":35,"column":9,"nodeType":"923","endLine":35,"endColumn":21},{"ruleId":"927","severity":2,"message":"953","line":37,"column":33,"nodeType":"929","endLine":37,"endColumn":40},{"ruleId":"921","severity":2,"message":"944","line":38,"column":9,"nodeType":"923","endLine":38,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":40,"column":9,"nodeType":"923","endLine":40,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":43,"column":9,"nodeType":"923","endLine":43,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":45,"column":9,"nodeType":"923","endLine":45,"endColumn":21},{"ruleId":"927","severity":2,"message":"953","line":47,"column":30,"nodeType":"929","endLine":47,"endColumn":37},{"ruleId":"921","severity":2,"message":"944","line":48,"column":9,"nodeType":"923","endLine":48,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":50,"column":9,"nodeType":"923","endLine":50,"endColumn":21},{"ruleId":"948","severity":2,"message":"949","line":55,"column":3,"nodeType":"916","messageId":"950"},{"ruleId":"921","severity":2,"message":"946","line":57,"column":7,"nodeType":"923","endLine":57,"endColumn":19},{"ruleId":"921","severity":2,"message":"946","line":63,"column":7,"nodeType":"923","endLine":63,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":71,"column":16,"nodeType":"923","endLine":71,"endColumn":36},{"ruleId":"921","severity":2,"message":"951","line":74,"column":31,"nodeType":"923","endLine":74,"endColumn":46},{"ruleId":"921","severity":2,"message":"951","line":75,"column":15,"nodeType":"923","endLine":75,"endColumn":30},{"ruleId":"921","severity":2,"message":"952","line":83,"column":3,"nodeType":"954","endLine":97,"endColumn":4},{"ruleId":"921","severity":2,"message":"944","line":84,"column":5,"nodeType":"923","endLine":84,"endColumn":19},{"ruleId":"921","severity":2,"message":"944","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":10,"column":5,"nodeType":"923","endLine":10,"endColumn":17},{"ruleId":"948","severity":2,"message":"949","line":13,"column":3,"nodeType":"916","messageId":"950"},{"ruleId":"921","severity":2,"message":"945","line":16,"column":14,"nodeType":"923","endLine":16,"endColumn":34},{"ruleId":"948","severity":2,"message":"955","line":18,"column":21,"nodeType":"956","messageId":"950"},{"ruleId":"957","severity":2,"message":"958","line":19,"column":11,"nodeType":"959","messageId":"960","endLine":37,"endColumn":12},{"ruleId":"921","severity":2,"message":"944","line":21,"column":15,"nodeType":"923","endLine":21,"endColumn":29},{"ruleId":"921","severity":2,"message":"961","line":24,"column":15,"nodeType":"923","endLine":24,"endColumn":39},{"ruleId":"921","severity":2,"message":"962","line":25,"column":15,"nodeType":"923","endLine":25,"endColumn":36},{"ruleId":"963","severity":2,"message":"964","line":28,"column":15,"nodeType":"965","endLine":28,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":30,"column":15,"nodeType":"923","endLine":30,"endColumn":29},{"ruleId":"927","severity":2,"message":"966","line":39,"column":17,"nodeType":"929","endLine":39,"endColumn":20},{"ruleId":"921","severity":2,"message":"946","line":40,"column":11,"nodeType":"923","endLine":40,"endColumn":23},{"ruleId":"921","severity":2,"message":"961","line":48,"column":3,"nodeType":"954","endLine":67,"endColumn":4},{"ruleId":"921","severity":2,"message":"944","line":53,"column":5,"nodeType":"923","endLine":53,"endColumn":19},{"ruleId":"921","severity":2,"message":"962","line":69,"column":3,"nodeType":"954","endLine":80,"endColumn":4},{"ruleId":"921","severity":2,"message":"944","line":73,"column":9,"nodeType":"923","endLine":73,"endColumn":23},{"ruleId":"921","severity":2,"message":"944","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":10,"column":5,"nodeType":"923","endLine":10,"endColumn":17},{"ruleId":"921","severity":2,"message":"967","line":11,"column":5,"nodeType":"923","endLine":11,"endColumn":25},{"ruleId":"927","severity":2,"message":"968","line":14,"column":21,"nodeType":"929","endLine":14,"endColumn":27},{"ruleId":"921","severity":2,"message":"944","line":15,"column":5,"nodeType":"923","endLine":15,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":19,"column":12,"nodeType":"923","endLine":19,"endColumn":32},{"ruleId":"948","severity":2,"message":"955","line":21,"column":19,"nodeType":"956","messageId":"950"},{"ruleId":"921","severity":2,"message":"922","line":27,"column":123,"nodeType":"923","endLine":27,"endColumn":131},{"ruleId":"921","severity":2,"message":"967","line":31,"column":35,"nodeType":"923","endLine":31,"endColumn":55},{"ruleId":"921","severity":2,"message":"922","line":31,"column":59,"nodeType":"923","endLine":31,"endColumn":67},{"ruleId":"921","severity":2,"message":"944","line":42,"column":13,"nodeType":"923","endLine":42,"endColumn":27},{"ruleId":"921","severity":2,"message":"946","line":52,"column":18,"nodeType":"923","endLine":52,"endColumn":30},{"ruleId":"927","severity":2,"message":"966","line":57,"column":15,"nodeType":"929","endLine":57,"endColumn":18},{"ruleId":"921","severity":2,"message":"946","line":58,"column":9,"nodeType":"923","endLine":58,"endColumn":21},{"ruleId":"969","severity":2,"message":"970","line":58,"column":130,"nodeType":"971","fix":"972"},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":7,"column":41},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"946","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":17},{"ruleId":"927","severity":2,"message":"968","line":11,"column":21,"nodeType":"929","endLine":11,"endColumn":27},{"ruleId":"921","severity":2,"message":"946","line":12,"column":5,"nodeType":"923","endLine":13,"endColumn":15},{"ruleId":"921","severity":2,"message":"944","line":5,"column":5,"nodeType":"923","endLine":5,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":6,"column":5,"nodeType":"923","endLine":6,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":17},{"ruleId":"921","severity":2,"message":"947","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":23},{"ruleId":"927","severity":2,"message":"968","line":12,"column":21,"nodeType":"929","endLine":12,"endColumn":27},{"ruleId":"921","severity":2,"message":"945","line":13,"column":12,"nodeType":"923","endLine":13,"endColumn":32},{"ruleId":"905","severity":2,"message":"973","line":21,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"921","severity":2,"message":"947","line":21,"column":49,"nodeType":"923","endLine":21,"endColumn":67},{"ruleId":"921","severity":2,"message":"922","line":21,"column":82,"nodeType":"923","endLine":21,"endColumn":90},{"ruleId":"921","severity":2,"message":"944","line":25,"column":11,"nodeType":"923","endLine":25,"endColumn":25},{"ruleId":"921","severity":2,"message":"947","line":28,"column":21,"nodeType":"923","endLine":28,"endColumn":39},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":7,"column":41},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":17},{"ruleId":"974","severity":2,"message":"975","line":15,"column":44,"nodeType":"976","messageId":"926","endLine":15,"endColumn":46},{"ruleId":"921","severity":2,"message":"946","line":16,"column":7,"nodeType":"923","endLine":16,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":24,"column":12,"nodeType":"923","endLine":25,"endColumn":23},{"ruleId":"927","severity":2,"message":"930","line":27,"column":14,"nodeType":"929","endLine":27,"endColumn":17},{"ruleId":"921","severity":2,"message":"946","line":28,"column":9,"nodeType":"923","endLine":28,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":17},{"ruleId":"977","severity":2,"message":"978","line":13,"column":29,"nodeType":"979","endLine":13,"endColumn":48},{"ruleId":"921","severity":2,"message":"946","line":16,"column":7,"nodeType":"923","endLine":16,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":22,"column":12,"nodeType":"923","endLine":23,"endColumn":23},{"ruleId":"927","severity":2,"message":"930","line":25,"column":14,"nodeType":"929","endLine":25,"endColumn":17},{"ruleId":"921","severity":2,"message":"946","line":26,"column":9,"nodeType":"923","endLine":26,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":17},{"ruleId":"921","severity":2,"message":"945","line":14,"column":14,"nodeType":"923","endLine":15,"endColumn":25},{"ruleId":"927","severity":2,"message":"930","line":17,"column":16,"nodeType":"929","endLine":17,"endColumn":19},{"ruleId":"921","severity":2,"message":"946","line":18,"column":11,"nodeType":"923","endLine":18,"endColumn":23},{"ruleId":"921","severity":2,"message":"945","line":24,"column":12,"nodeType":"923","endLine":25,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":28,"column":9,"nodeType":"923","endLine":28,"endColumn":21},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":17},{"ruleId":"948","severity":2,"message":"949","line":13,"column":3,"nodeType":"916","messageId":"950"},{"ruleId":"921","severity":2,"message":"944","line":19,"column":14,"nodeType":"923","endLine":19,"endColumn":28},{"ruleId":"921","severity":2,"message":"945","line":28,"column":11,"nodeType":"923","endLine":28,"endColumn":31},{"ruleId":"905","severity":2,"message":"980","line":29,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"981","severity":2,"message":"982","line":30,"column":20,"nodeType":"929","endLine":30,"endColumn":23},{"ruleId":"927","severity":2,"message":"930","line":30,"column":20,"nodeType":"929","endLine":30,"endColumn":23},{"ruleId":"921","severity":2,"message":"946","line":31,"column":15,"nodeType":"923","endLine":31,"endColumn":27},{"ruleId":"921","severity":2,"message":"944","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"946","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":17},{"ruleId":"921","severity":2,"message":"946","line":16,"column":7,"nodeType":"923","endLine":16,"endColumn":19},{"ruleId":"921","severity":2,"message":"945","line":23,"column":12,"nodeType":"923","endLine":24,"endColumn":23},{"ruleId":"927","severity":2,"message":"930","line":26,"column":14,"nodeType":"929","endLine":26,"endColumn":17},{"ruleId":"921","severity":2,"message":"946","line":29,"column":9,"nodeType":"923","endLine":29,"endColumn":21},{"ruleId":"927","severity":2,"message":"983","line":5,"column":7,"nodeType":"929","endLine":5,"endColumn":13},{"ruleId":"937","severity":2,"message":"984","line":8,"column":7,"nodeType":"929","messageId":"939","endLine":8,"endColumn":20},{"ruleId":"937","severity":2,"message":"984","line":27,"column":66,"nodeType":"929","messageId":"939","endLine":27,"endColumn":79},{"ruleId":"985","severity":2,"message":"986","line":27,"column":81,"nodeType":"987","messageId":"926","fix":"988"},{"ruleId":"989","severity":2,"message":"990","line":14,"column":22,"nodeType":"991","endLine":14,"endColumn":23},{"ruleId":"989","severity":2,"message":"990","line":14,"column":29,"nodeType":"991","endLine":14,"endColumn":30},{"ruleId":"921","severity":2,"message":"992","line":30,"column":29,"nodeType":"923","endLine":30,"endColumn":45},{"ruleId":"921","severity":2,"message":"993","line":33,"column":15,"nodeType":"923","endLine":33,"endColumn":35},{"ruleId":"921","severity":2,"message":"993","line":50,"column":3,"nodeType":"954","endLine":61,"endColumn":4},{"ruleId":"921","severity":2,"message":"992","line":63,"column":3,"nodeType":"954","endLine":75,"endColumn":4},{"ruleId":"994","severity":2,"message":"995","line":67,"column":25,"nodeType":"979"},{"ruleId":"937","severity":2,"message":"996","line":9,"column":13,"nodeType":"929","messageId":"939","endLine":9,"endColumn":20},{"ruleId":"937","severity":2,"message":"996","line":10,"column":14,"nodeType":"929","messageId":"939","endLine":10,"endColumn":21},{"ruleId":"937","severity":2,"message":"996","line":10,"column":34,"nodeType":"929","messageId":"939","endLine":10,"endColumn":41},{"ruleId":"905","severity":2,"message":"997","line":56,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"927","severity":2,"message":"953","line":4,"column":10,"nodeType":"929","endLine":4,"endColumn":17},{"ruleId":"905","severity":2,"message":"998","line":17,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"927","severity":2,"message":"999","line":11,"column":16,"nodeType":"929","endLine":11,"endColumn":19},{"ruleId":"924","severity":1,"message":"925","line":26,"column":25,"nodeType":"923","messageId":"926","endLine":26,"endColumn":36},{"ruleId":"924","severity":1,"message":"925","line":38,"column":11,"nodeType":"923","messageId":"926","endLine":38,"endColumn":22},{"ruleId":"927","severity":2,"message":"1000","line":42,"column":16,"nodeType":"929","endLine":42,"endColumn":17},{"ruleId":"924","severity":1,"message":"925","line":49,"column":25,"nodeType":"923","messageId":"926","endLine":49,"endColumn":36},{"ruleId":"921","severity":2,"message":"1001","line":6,"column":3,"nodeType":"1002","endLine":18,"endColumn":4},{"ruleId":"1003","severity":2,"message":"1004","line":12,"column":9,"nodeType":"929","endLine":12,"endColumn":34},{"ruleId":"921","severity":2,"message":"1005","line":20,"column":3,"nodeType":"1002","endLine":28,"endColumn":4},{"ruleId":"921","severity":2,"message":"922","line":37,"column":29,"nodeType":"923","endLine":37,"endColumn":40},{"ruleId":"927","severity":2,"message":"1006","line":1,"column":13,"nodeType":"929","endLine":1,"endColumn":26},{"ruleId":"921","severity":2,"message":"944","line":6,"column":5,"nodeType":"923","endLine":6,"endColumn":19},{"ruleId":"921","severity":2,"message":"1007","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":15},{"ruleId":"921","severity":2,"message":"945","line":8,"column":5,"nodeType":"923","endLine":8,"endColumn":25},{"ruleId":"921","severity":2,"message":"1008","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":26},{"ruleId":"921","severity":2,"message":"1009","line":10,"column":5,"nodeType":"923","endLine":10,"endColumn":25},{"ruleId":"921","severity":2,"message":"945","line":14,"column":5,"nodeType":"923","endLine":14,"endColumn":25},{"ruleId":"921","severity":2,"message":"922","line":15,"column":21,"nodeType":"923","endLine":15,"endColumn":32},{"ruleId":"921","severity":2,"message":"922","line":18,"column":52,"nodeType":"923","endLine":18,"endColumn":63},{"ruleId":"921","severity":2,"message":"1009","line":18,"column":76,"nodeType":"923","endLine":18,"endColumn":96},{"ruleId":"921","severity":2,"message":"944","line":19,"column":11,"nodeType":"923","endLine":19,"endColumn":25},{"ruleId":"921","severity":2,"message":"1008","line":25,"column":59,"nodeType":"923","endLine":25,"endColumn":80},{"ruleId":"927","severity":2,"message":"966","line":28,"column":21,"nodeType":"929","endLine":28,"endColumn":24},{"ruleId":"921","severity":2,"message":"1010","line":26,"column":5,"nodeType":"923","endLine":26,"endColumn":26},{"ruleId":"921","severity":2,"message":"1010","line":36,"column":12,"nodeType":"923","endLine":36,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":41,"column":12,"nodeType":"923","endLine":41,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":51,"column":12,"nodeType":"923","endLine":51,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":65,"column":12,"nodeType":"923","endLine":65,"endColumn":33},{"ruleId":"981","severity":2,"message":"1011","line":68,"column":33,"nodeType":"929","endLine":68,"endColumn":37},{"ruleId":"921","severity":2,"message":"1010","line":87,"column":12,"nodeType":"923","endLine":87,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":92,"column":12,"nodeType":"923","endLine":92,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":103,"column":12,"nodeType":"923","endLine":103,"endColumn":33},{"ruleId":"905","severity":2,"message":"1012","line":118,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"1013","severity":2,"message":"1014","line":118,"column":29,"nodeType":"929","endLine":118,"endColumn":34},{"ruleId":"921","severity":2,"message":"1010","line":130,"column":16,"nodeType":"923","endLine":130,"endColumn":37},{"ruleId":"921","severity":2,"message":"1010","line":153,"column":12,"nodeType":"923","endLine":153,"endColumn":33},{"ruleId":"974","severity":2,"message":"975","line":156,"column":24,"nodeType":"976","messageId":"926","endLine":156,"endColumn":26},{"ruleId":"921","severity":2,"message":"1010","line":157,"column":18,"nodeType":"923","endLine":157,"endColumn":39},{"ruleId":"921","severity":2,"message":"1010","line":183,"column":12,"nodeType":"923","endLine":183,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":187,"column":9,"nodeType":"923","endLine":187,"endColumn":30},{"ruleId":"921","severity":2,"message":"1010","line":193,"column":12,"nodeType":"923","endLine":193,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":198,"column":12,"nodeType":"923","endLine":198,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":203,"column":12,"nodeType":"923","endLine":203,"endColumn":33},{"ruleId":"921","severity":2,"message":"1010","line":208,"column":12,"nodeType":"923","endLine":208,"endColumn":33},{"ruleId":"921","severity":2,"message":"1015","line":5,"column":5,"nodeType":"923","endLine":5,"endColumn":21},{"ruleId":"921","severity":2,"message":"1016","line":7,"column":5,"nodeType":"923","endLine":7,"endColumn":25},{"ruleId":"921","severity":2,"message":"1017","line":9,"column":5,"nodeType":"923","endLine":9,"endColumn":14},{"ruleId":"921","severity":2,"message":"1018","line":11,"column":15,"nodeType":"923","endLine":11,"endColumn":30},{"ruleId":"921","severity":2,"message":"1016","line":18,"column":5,"nodeType":"923","endLine":18,"endColumn":25},{"ruleId":"921","severity":2,"message":"1017","line":23,"column":5,"nodeType":"923","endLine":23,"endColumn":14},{"ruleId":"921","severity":2,"message":"1018","line":26,"column":3,"nodeType":"954","endLine":32,"endColumn":4},{"ruleId":"1019","severity":2,"message":"1020","line":27,"column":5,"nodeType":"1021","endLine":27,"endColumn":23},{"ruleId":"921","severity":2,"message":"1015","line":27,"column":5,"nodeType":"923","endLine":27,"endColumn":21},{"ruleId":"921","severity":2,"message":"1016","line":29,"column":5,"nodeType":"923","endLine":29,"endColumn":25},{"ruleId":"921","severity":2,"message":"1015","line":30,"column":12,"nodeType":"923","endLine":30,"endColumn":28},{"ruleId":"921","severity":2,"message":"945","line":5,"column":7,"nodeType":"1022","endLine":5,"endColumn":22},{"ruleId":"921","severity":2,"message":"1023","line":6,"column":7,"nodeType":"1022","endLine":6,"endColumn":19},{"ruleId":"927","severity":2,"message":"930","line":25,"column":20,"nodeType":"929","endLine":25,"endColumn":23},{"ruleId":"921","severity":2,"message":"922","line":36,"column":28,"nodeType":"923","endLine":36,"endColumn":39},{"ruleId":"905","severity":2,"message":"906","line":23,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"921","severity":2,"message":"922","line":23,"column":83,"nodeType":"923","endLine":23,"endColumn":94},{"ruleId":"921","severity":2,"message":"922","line":30,"column":82,"nodeType":"923","endLine":30,"endColumn":93},{"ruleId":"924","severity":1,"message":"925","line":39,"column":9,"nodeType":"923","messageId":"926","endLine":39,"endColumn":20},{"ruleId":"937","severity":2,"message":"1024","line":9,"column":10,"nodeType":"929","messageId":"939","endLine":9,"endColumn":19},{"ruleId":"937","severity":2,"message":"1025","line":9,"column":21,"nodeType":"929","messageId":"939","endLine":9,"endColumn":34},{"ruleId":"937","severity":2,"message":"1026","line":21,"column":11,"nodeType":"929","messageId":"939","endLine":21,"endColumn":30},{"ruleId":"927","severity":2,"message":"1027","line":6,"column":8,"nodeType":"929","endLine":6,"endColumn":15},{"ruleId":"974","severity":2,"message":"975","line":29,"column":35,"nodeType":"976","messageId":"926","endLine":29,"endColumn":37},{"ruleId":null,"fatal":true,"severity":2,"message":"933","line":23,"column":45},{"ruleId":"1028","severity":2,"message":"1029","line":2,"column":29,"nodeType":"991","endLine":2,"endColumn":49},{"ruleId":"1030","severity":2,"message":"1029","line":2,"column":29,"nodeType":"991","endLine":2,"endColumn":49},{"ruleId":"1031","severity":2,"message":"1032","line":6,"column":3,"nodeType":"954","endLine":8,"endColumn":4},{"ruleId":"1033","severity":2,"message":"1034","line":6,"column":17,"nodeType":"916","messageId":"926"},{"ruleId":"921","severity":2,"message":"1010","line":23,"column":9,"nodeType":"923","endLine":23,"endColumn":30},{"ruleId":"921","severity":2,"message":"1035","line":24,"column":9,"nodeType":"923","endLine":24,"endColumn":27},{"ruleId":"921","severity":2,"message":"1010","line":32,"column":12,"nodeType":"923","endLine":32,"endColumn":33},{"ruleId":"921","severity":2,"message":"1035","line":36,"column":12,"nodeType":"923","endLine":36,"endColumn":30},{"ruleId":"1036","severity":2,"message":"1037","line":3,"column":1,"nodeType":"1038","endLine":16,"endColumn":2},{"ruleId":"981","severity":2,"message":"1039","line":7,"column":19,"nodeType":"929","endLine":7,"endColumn":22},{"ruleId":"981","severity":2,"message":"1039","line":23,"column":34,"nodeType":"929","endLine":23,"endColumn":37},{"ruleId":"981","severity":2,"message":"1039","line":28,"column":18,"nodeType":"929","endLine":28,"endColumn":21},{"ruleId":"981","severity":2,"message":"1040","line":28,"column":23,"nodeType":"929","endLine":28,"endColumn":24},{"ruleId":"981","severity":2,"message":"1039","line":51,"column":77,"nodeType":"929","endLine":51,"endColumn":80},{"ruleId":"1041","severity":2,"message":"1042","line":6,"column":10,"nodeType":"916","messageId":"1043","endLine":11,"endColumn":4},{"ruleId":"1041","severity":2,"message":"1044","line":14,"column":10,"nodeType":"916","messageId":"1043","endLine":19,"endColumn":4},{"ruleId":"921","severity":2,"message":"1045","line":5,"column":5,"nodeType":"923","endLine":5,"endColumn":21},{"ruleId":"921","severity":2,"message":"1046","line":30,"column":28,"nodeType":"923","endLine":30,"endColumn":42},{"ruleId":"921","severity":2,"message":"1047","line":34,"column":55,"nodeType":"923","endLine":34,"endColumn":76},{"ruleId":"921","severity":2,"message":"1048","line":35,"column":52,"nodeType":"923","endLine":35,"endColumn":66},{"ruleId":"921","severity":2,"message":"1049","line":36,"column":14,"nodeType":"923","endLine":36,"endColumn":32},{"ruleId":"921","severity":2,"message":"1049","line":39,"column":12,"nodeType":"923","endLine":39,"endColumn":30},{"ruleId":"921","severity":2,"message":"1047","line":43,"column":3,"nodeType":"954","endLine":49,"endColumn":4},{"ruleId":"1041","severity":2,"message":"1050","line":43,"column":19,"nodeType":"916","messageId":"1043","endLine":49,"endColumn":4},{"ruleId":"921","severity":2,"message":"1048","line":51,"column":3,"nodeType":"954","endLine":53,"endColumn":4},{"ruleId":"921","severity":2,"message":"1045","line":52,"column":12,"nodeType":"923","endLine":52,"endColumn":28},{"ruleId":"921","severity":2,"message":"1046","line":56,"column":3,"nodeType":"954","endLine":62,"endColumn":4},{"ruleId":"1041","severity":2,"message":"1051","line":56,"column":12,"nodeType":"916","messageId":"1043","endLine":62,"endColumn":4},{"ruleId":"921","severity":2,"message":"1049","line":64,"column":3,"nodeType":"954","endLine":66,"endColumn":4},{"ruleId":"1041","severity":2,"message":"1052","line":64,"column":16,"nodeType":"916","messageId":"1043","endLine":66,"endColumn":4},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"910","severity":2,"message":"1054","line":6,"column":1,"nodeType":"912","endLine":6,"endColumn":36,"fix":"1055"},{"ruleId":"927","severity":2,"message":"1056","line":6,"column":10,"nodeType":"929","endLine":6,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1059"},{"ruleId":"927","severity":2,"message":"1060","line":10,"column":7,"nodeType":"929","endLine":10,"endColumn":13},{"ruleId":"1061","severity":2,"message":"1062","line":24,"column":7,"nodeType":"1063","messageId":"1064","endLine":24,"endColumn":8,"fix":"1065"},{"ruleId":"927","severity":2,"message":"1066","line":25,"column":14,"nodeType":"929","endLine":25,"endColumn":16},{"ruleId":"1067","severity":2,"message":"1068","line":28,"column":14,"nodeType":"956","messageId":"1069","endLine":28,"endColumn":17,"fix":"1070"},{"ruleId":"1067","severity":2,"message":"1068","line":44,"column":9,"nodeType":"956","messageId":"1069","endLine":44,"endColumn":12,"fix":"1071"},{"ruleId":"927","severity":2,"message":"966","line":44,"column":9,"nodeType":"929","endLine":44,"endColumn":12},{"ruleId":"1067","severity":2,"message":"1068","line":48,"column":19,"nodeType":"956","messageId":"1069","endLine":48,"endColumn":27,"fix":"1072"},{"ruleId":"1067","severity":2,"message":"1068","line":53,"column":20,"nodeType":"956","messageId":"1069","endLine":53,"endColumn":23,"fix":"1073"},{"ruleId":"981","severity":2,"message":"1039","line":53,"column":20,"nodeType":"929","endLine":53,"endColumn":23},{"ruleId":"1067","severity":2,"message":"1068","line":64,"column":9,"nodeType":"956","messageId":"1069","endLine":64,"endColumn":12,"fix":"1074"},{"ruleId":"927","severity":2,"message":"966","line":64,"column":9,"nodeType":"929","endLine":64,"endColumn":12},{"ruleId":"1067","severity":2,"message":"1068","line":68,"column":19,"nodeType":"956","messageId":"1069","endLine":68,"endColumn":27,"fix":"1075"},{"ruleId":"1067","severity":2,"message":"1068","line":73,"column":20,"nodeType":"956","messageId":"1069","endLine":73,"endColumn":23,"fix":"1076"},{"ruleId":"981","severity":2,"message":"1039","line":73,"column":20,"nodeType":"929","endLine":73,"endColumn":23},{"ruleId":"1067","severity":2,"message":"1068","line":82,"column":9,"nodeType":"956","messageId":"1069","endLine":82,"endColumn":12,"fix":"1077"},{"ruleId":"927","severity":2,"message":"966","line":82,"column":9,"nodeType":"929","endLine":82,"endColumn":12},{"ruleId":"1067","severity":2,"message":"1068","line":86,"column":19,"nodeType":"956","messageId":"1069","endLine":86,"endColumn":27,"fix":"1078"},{"ruleId":"1067","severity":2,"message":"1068","line":90,"column":20,"nodeType":"956","messageId":"1069","endLine":90,"endColumn":23,"fix":"1079"},{"ruleId":"981","severity":2,"message":"1039","line":90,"column":20,"nodeType":"929","endLine":90,"endColumn":23},{"ruleId":"1080","severity":2,"message":"1081","line":101,"column":9,"nodeType":"971","endLine":101,"endColumn":32},{"ruleId":"1067","severity":2,"message":"1068","line":106,"column":13,"nodeType":"956","messageId":"1069","endLine":106,"endColumn":20,"fix":"1082"},{"ruleId":"1067","severity":2,"message":"1068","line":110,"column":14,"nodeType":"956","messageId":"1069","endLine":110,"endColumn":17,"fix":"1083"},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":9,"column":41},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"1057","severity":2,"message":"1058","line":8,"column":7,"nodeType":"1022","endLine":8,"endColumn":27,"fix":"1084"},{"ruleId":"927","severity":2,"message":"1060","line":8,"column":7,"nodeType":"929","endLine":8,"endColumn":13},{"ruleId":"1061","severity":2,"message":"1062","line":21,"column":7,"nodeType":"1063","messageId":"1064","endLine":21,"endColumn":8,"fix":"1085"},{"ruleId":"927","severity":2,"message":"1066","line":22,"column":14,"nodeType":"929","endLine":22,"endColumn":16},{"ruleId":"927","severity":2,"message":"1086","line":25,"column":19,"nodeType":"929","endLine":25,"endColumn":20},{"ruleId":"1067","severity":2,"message":"1068","line":41,"column":13,"nodeType":"956","messageId":"1069","endLine":41,"endColumn":18,"fix":"1087"},{"ruleId":"1067","severity":2,"message":"1068","line":46,"column":14,"nodeType":"956","messageId":"1069","endLine":46,"endColumn":17,"fix":"1088"},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"1089","severity":2,"message":"1090","line":6,"column":10,"nodeType":"929","endLine":6,"endColumn":24},{"ruleId":"1089","severity":2,"message":"1091","line":6,"column":26,"nodeType":"929","endLine":6,"endColumn":38},{"ruleId":"1057","severity":2,"message":"1058","line":9,"column":7,"nodeType":"1022","endLine":9,"endColumn":27,"fix":"1092"},{"ruleId":"1080","severity":2,"message":"1081","line":39,"column":7,"nodeType":"971","endLine":39,"endColumn":50},{"ruleId":"914","severity":1,"message":"1093","line":43,"column":8,"nodeType":"916","messageId":"917","endLine":43,"endColumn":17},{"ruleId":"927","severity":2,"message":"1094","line":3,"column":8,"nodeType":"929","endLine":3,"endColumn":12},{"ruleId":"1080","severity":2,"message":"1081","line":41,"column":9,"nodeType":"971","endLine":43,"endColumn":25},{"ruleId":"1095","severity":2,"message":"1096","line":45,"column":9,"nodeType":"929","messageId":"1097","endLine":45,"endColumn":13},{"ruleId":"1095","severity":2,"message":"1096","line":48,"column":9,"nodeType":"929","messageId":"1097","endLine":48,"endColumn":13},{"ruleId":"910","severity":2,"message":"1098","line":6,"column":1,"nodeType":"912","endLine":6,"endColumn":36,"fix":"1099"},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1100"},{"ruleId":"927","severity":2,"message":"1060","line":10,"column":7,"nodeType":"929","endLine":10,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":69,"fix":"1103"},{"ruleId":"927","severity":2,"message":"930","line":37,"column":14,"nodeType":"929","endLine":37,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":38,"column":9,"nodeType":"971","endLine":41,"endColumn":25},{"ruleId":"927","severity":2,"message":"930","line":53,"column":14,"nodeType":"929","endLine":53,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":54,"column":9,"nodeType":"971","endLine":56,"endColumn":25},{"ruleId":"927","severity":2,"message":"930","line":71,"column":14,"nodeType":"929","endLine":71,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":72,"column":9,"nodeType":"971","endLine":74,"endColumn":25},{"ruleId":"1061","severity":2,"message":"1104","line":110,"column":8,"nodeType":"1063","messageId":"1105","endLine":110,"endColumn":9,"fix":"1106"},{"ruleId":"927","severity":2,"message":"930","line":117,"column":14,"nodeType":"929","endLine":117,"endColumn":17},{"ruleId":"927","severity":2,"message":"930","line":154,"column":14,"nodeType":"929","endLine":154,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":155,"column":9,"nodeType":"971","endLine":158,"endColumn":25},{"ruleId":"927","severity":2,"message":"930","line":194,"column":14,"nodeType":"929","endLine":194,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":195,"column":9,"nodeType":"971","endLine":197,"endColumn":25},{"ruleId":"1107","severity":2,"message":"1108","line":7,"column":33,"nodeType":"991","endLine":7,"endColumn":90},{"ruleId":"1109","severity":2,"message":"1110","line":34,"column":21,"nodeType":"979","messageId":"926","endLine":34,"endColumn":67},{"ruleId":"921","severity":2,"message":"961","line":40,"column":5,"nodeType":"923","endLine":40,"endColumn":32},{"ruleId":"1061","severity":2,"message":"1104","line":49,"column":38,"nodeType":"1063","messageId":"1105","endLine":49,"endColumn":39,"fix":"1111"},{"ruleId":"1067","severity":2,"message":"1068","line":50,"column":13,"nodeType":"956","messageId":"1069","endLine":50,"endColumn":16,"fix":"1112"},{"ruleId":"1080","severity":2,"message":"1081","line":53,"column":9,"nodeType":"971","endLine":56,"endColumn":25},{"ruleId":"921","severity":2,"message":"961","line":53,"column":9,"nodeType":"923","endLine":54,"endColumn":31},{"ruleId":"927","severity":2,"message":"930","line":75,"column":14,"nodeType":"929","endLine":75,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":76,"column":9,"nodeType":"971","endLine":79,"endColumn":25},{"ruleId":"1109","severity":2,"message":"1110","line":88,"column":21,"nodeType":"979","messageId":"926","endLine":88,"endColumn":67},{"ruleId":"921","severity":2,"message":"962","line":93,"column":5,"nodeType":"923","endLine":93,"endColumn":29},{"ruleId":"1061","severity":2,"message":"1104","line":101,"column":13,"nodeType":"1063","messageId":"1105","endLine":101,"endColumn":14,"fix":"1113"},{"ruleId":"1067","severity":2,"message":"1068","line":102,"column":13,"nodeType":"956","messageId":"1069","endLine":102,"endColumn":16,"fix":"1114"},{"ruleId":"927","severity":2,"message":"930","line":102,"column":13,"nodeType":"929","endLine":102,"endColumn":16},{"ruleId":"1080","severity":2,"message":"1081","line":103,"column":9,"nodeType":"971","endLine":106,"endColumn":25},{"ruleId":"921","severity":2,"message":"962","line":103,"column":9,"nodeType":"923","endLine":104,"endColumn":28},{"ruleId":"910","severity":2,"message":"1115","line":6,"column":1,"nodeType":"912","endLine":6,"endColumn":36,"fix":"1116"},{"ruleId":"1057","severity":2,"message":"1058","line":9,"column":7,"nodeType":"1022","endLine":9,"endColumn":27,"fix":"1117"},{"ruleId":"927","severity":2,"message":"1060","line":9,"column":7,"nodeType":"929","endLine":9,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":11,"column":1,"nodeType":"912","endLine":11,"endColumn":84,"fix":"1118"},{"ruleId":"1067","severity":2,"message":"1068","line":63,"column":13,"nodeType":"956","messageId":"1069","endLine":63,"endColumn":16,"fix":"1119"},{"ruleId":"927","severity":2,"message":"930","line":63,"column":13,"nodeType":"929","endLine":63,"endColumn":16},{"ruleId":"1080","severity":2,"message":"1081","line":64,"column":9,"nodeType":"971","endLine":67,"endColumn":25},{"ruleId":"1061","severity":2,"message":"1104","line":66,"column":44,"nodeType":"1063","messageId":"1105","endLine":66,"endColumn":45,"fix":"1120"},{"ruleId":"927","severity":2,"message":"930","line":81,"column":14,"nodeType":"929","endLine":81,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":82,"column":9,"nodeType":"971","endLine":85,"endColumn":25},{"ruleId":"927","severity":2,"message":"1056","line":5,"column":10,"nodeType":"929","endLine":5,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1121"},{"ruleId":"927","severity":2,"message":"1060","line":10,"column":7,"nodeType":"929","endLine":10,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":82,"fix":"1122"},{"ruleId":"927","severity":2,"message":"1123","line":16,"column":7,"nodeType":"929","endLine":16,"endColumn":21},{"ruleId":"927","severity":2,"message":"930","line":36,"column":14,"nodeType":"929","endLine":36,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":37,"column":9,"nodeType":"971","endLine":39,"endColumn":25},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1124"},{"ruleId":"927","severity":2,"message":"1060","line":10,"column":7,"nodeType":"929","endLine":10,"endColumn":13},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":89,"fix":"1125"},{"ruleId":"1126","severity":2,"message":"1127","line":31,"column":76,"nodeType":"1128","fix":"1129"},{"ruleId":"927","severity":2,"message":"930","line":53,"column":14,"nodeType":"929","endLine":53,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":54,"column":9,"nodeType":"971","endLine":57,"endColumn":25},{"ruleId":"1067","severity":2,"message":"1068","line":56,"column":25,"nodeType":"956","messageId":"1069","endLine":56,"endColumn":30,"fix":"1130"},{"ruleId":"1061","severity":2,"message":"1104","line":56,"column":146,"nodeType":"1063","messageId":"1105","endLine":56,"endColumn":147,"fix":"1131"},{"ruleId":"910","severity":2,"message":"1132","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1133"},{"ruleId":"927","severity":2,"message":"1056","line":7,"column":10,"nodeType":"929","endLine":7,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1134"},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":92,"fix":"1135"},{"ruleId":"927","severity":2,"message":"1136","line":24,"column":23,"nodeType":"929","endLine":24,"endColumn":27},{"ruleId":"1080","severity":2,"message":"1081","line":42,"column":9,"nodeType":"971","endLine":42,"endColumn":36},{"ruleId":"1080","severity":2,"message":"1081","line":55,"column":9,"nodeType":"971","endLine":55,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":56,"column":9,"nodeType":"971","endLine":56,"endColumn":36},{"ruleId":"1080","severity":2,"message":"1081","line":68,"column":9,"nodeType":"971","endLine":69,"endColumn":23},{"ruleId":"1080","severity":2,"message":"1081","line":70,"column":9,"nodeType":"971","endLine":70,"endColumn":35},{"ruleId":"910","severity":2,"message":"1132","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1137"},{"ruleId":"927","severity":2,"message":"1056","line":7,"column":10,"nodeType":"929","endLine":7,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1138"},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":91,"fix":"1139"},{"ruleId":"927","severity":2,"message":"1136","line":24,"column":23,"nodeType":"929","endLine":24,"endColumn":27},{"ruleId":"1080","severity":2,"message":"1081","line":41,"column":9,"nodeType":"971","endLine":42,"endColumn":23},{"ruleId":"1080","severity":2,"message":"1081","line":43,"column":9,"nodeType":"971","endLine":43,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":44,"column":9,"nodeType":"971","endLine":44,"endColumn":36},{"ruleId":"1080","severity":2,"message":"1081","line":57,"column":9,"nodeType":"971","endLine":57,"endColumn":36},{"ruleId":"910","severity":2,"message":"1132","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1140"},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1141"},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":78,"fix":"1142"},{"ruleId":"927","severity":2,"message":"1143","line":24,"column":23,"nodeType":"929","endLine":24,"endColumn":28},{"ruleId":"927","severity":2,"message":"1144","line":25,"column":23,"nodeType":"929","endLine":25,"endColumn":32},{"ruleId":"927","severity":2,"message":"1145","line":25,"column":34,"nodeType":"929","endLine":25,"endColumn":37},{"ruleId":"1080","severity":2,"message":"1081","line":43,"column":9,"nodeType":"971","endLine":43,"endColumn":42},{"ruleId":"1126","severity":2,"message":"1146","line":54,"column":16,"nodeType":"1128","fix":"1147"},{"ruleId":"1126","severity":2,"message":"1148","line":54,"column":105,"nodeType":"1128","fix":"1149"},{"ruleId":"1080","severity":2,"message":"1081","line":56,"column":9,"nodeType":"971","endLine":57,"endColumn":23},{"ruleId":"1080","severity":2,"message":"1081","line":58,"column":9,"nodeType":"971","endLine":58,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":59,"column":9,"nodeType":"971","endLine":59,"endColumn":36},{"ruleId":"910","severity":2,"message":"1132","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1150"},{"ruleId":"927","severity":2,"message":"1056","line":7,"column":10,"nodeType":"929","endLine":7,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1151"},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":84,"fix":"1152"},{"ruleId":"927","severity":2,"message":"1144","line":24,"column":23,"nodeType":"929","endLine":24,"endColumn":32},{"ruleId":"927","severity":2,"message":"1145","line":24,"column":34,"nodeType":"929","endLine":24,"endColumn":37},{"ruleId":"927","severity":2,"message":"1153","line":32,"column":17,"nodeType":"929","endLine":32,"endColumn":20},{"ruleId":"1080","severity":2,"message":"1081","line":67,"column":9,"nodeType":"971","endLine":67,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":97,"column":9,"nodeType":"971","endLine":98,"endColumn":23},{"ruleId":"1080","severity":2,"message":"1081","line":100,"column":9,"nodeType":"971","endLine":100,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":101,"column":9,"nodeType":"971","endLine":101,"endColumn":36},{"ruleId":"910","severity":2,"message":"1132","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1154"},{"ruleId":"927","severity":2,"message":"1056","line":7,"column":10,"nodeType":"929","endLine":7,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1155"},{"ruleId":"1101","severity":2,"message":"1102","line":12,"column":1,"nodeType":"912","endLine":12,"endColumn":80,"fix":"1156"},{"ruleId":"927","severity":2,"message":"1136","line":24,"column":23,"nodeType":"929","endLine":24,"endColumn":27},{"ruleId":"1080","severity":2,"message":"1081","line":42,"column":9,"nodeType":"971","endLine":42,"endColumn":36},{"ruleId":"1080","severity":2,"message":"1081","line":56,"column":9,"nodeType":"971","endLine":56,"endColumn":36},{"ruleId":"1080","severity":2,"message":"1081","line":69,"column":9,"nodeType":"971","endLine":69,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":82,"column":9,"nodeType":"971","endLine":82,"endColumn":35},{"ruleId":"1080","severity":2,"message":"1081","line":83,"column":9,"nodeType":"971","endLine":83,"endColumn":38},{"ruleId":"1080","severity":2,"message":"1081","line":84,"column":9,"nodeType":"971","endLine":84,"endColumn":36},{"ruleId":"927","severity":2,"message":"1053","line":5,"column":8,"nodeType":"929","endLine":5,"endColumn":13},{"ruleId":"1057","severity":2,"message":"1058","line":12,"column":7,"nodeType":"1022","endLine":12,"endColumn":27,"fix":"1157"},{"ruleId":"927","severity":2,"message":"1060","line":12,"column":7,"nodeType":"929","endLine":12,"endColumn":13},{"ruleId":"1080","severity":2,"message":"1081","line":70,"column":7,"nodeType":"971","endLine":70,"endColumn":33},{"ruleId":"1057","severity":2,"message":"1058","line":11,"column":7,"nodeType":"1022","endLine":11,"endColumn":27,"fix":"1158"},{"ruleId":"927","severity":2,"message":"1060","line":11,"column":7,"nodeType":"929","endLine":11,"endColumn":13},{"ruleId":"1067","severity":2,"message":"1068","line":35,"column":13,"nodeType":"956","messageId":"1069","endLine":35,"endColumn":16,"fix":"1159"},{"ruleId":"927","severity":2,"message":"930","line":35,"column":13,"nodeType":"929","endLine":35,"endColumn":16},{"ruleId":"1080","severity":2,"message":"1081","line":36,"column":9,"nodeType":"971","endLine":39,"endColumn":27},{"ruleId":"1067","severity":2,"message":"1068","line":42,"column":14,"nodeType":"956","messageId":"1069","endLine":42,"endColumn":17,"fix":"1160"},{"ruleId":"1057","severity":2,"message":"1058","line":12,"column":7,"nodeType":"1022","endLine":12,"endColumn":27,"fix":"1161"},{"ruleId":"927","severity":2,"message":"1060","line":12,"column":7,"nodeType":"929","endLine":12,"endColumn":13},{"ruleId":"1080","severity":2,"message":"1081","line":60,"column":9,"nodeType":"971","endLine":61,"endColumn":38},{"ruleId":"1067","severity":2,"message":"1068","line":65,"column":14,"nodeType":"956","messageId":"1069","endLine":65,"endColumn":17,"fix":"1162"},{"ruleId":"927","severity":2,"message":"1163","line":5,"column":8,"nodeType":"929","endLine":5,"endColumn":10},{"ruleId":"1164","severity":2,"message":"1165","line":6,"column":28,"nodeType":"991","endLine":6,"endColumn":70,"fix":"1166"},{"ruleId":"1164","severity":2,"message":"1165","line":7,"column":29,"nodeType":"991","endLine":7,"endColumn":71},{"ruleId":"910","severity":2,"message":"1167","line":8,"column":1,"nodeType":"912","endLine":8,"endColumn":36,"fix":"1168"},{"ruleId":"1057","severity":2,"message":"1058","line":12,"column":7,"nodeType":"1022","endLine":12,"endColumn":27,"fix":"1169"},{"ruleId":"924","severity":1,"message":"925","line":81,"column":9,"nodeType":"923","messageId":"926","endLine":81,"endColumn":20},{"ruleId":"905","severity":2,"message":"1170","line":92,"column":1,"nodeType":"907","messageId":"908"},{"ruleId":"1171","severity":2,"message":"1172","line":92,"column":38,"nodeType":"1173","endLine":103,"endColumn":8},{"ruleId":"924","severity":1,"message":"925","line":112,"column":9,"nodeType":"923","messageId":"926","endLine":112,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":129,"column":9,"nodeType":"923","messageId":"926","endLine":129,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":159,"column":9,"nodeType":"923","messageId":"926","endLine":159,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":193,"column":9,"nodeType":"923","messageId":"926","endLine":193,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":229,"column":9,"nodeType":"923","messageId":"926","endLine":229,"endColumn":20},{"ruleId":"1080","severity":2,"message":"1081","line":257,"column":9,"nodeType":"971","endLine":257,"endColumn":40},{"ruleId":"924","severity":1,"message":"925","line":261,"column":9,"nodeType":"923","messageId":"926","endLine":261,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":292,"column":9,"nodeType":"923","messageId":"926","endLine":292,"endColumn":20},{"ruleId":"1174","severity":2,"message":"1175","line":300,"column":5,"nodeType":"1176","endLine":300,"endColumn":63,"fix":"1177"},{"ruleId":"1178","severity":2,"message":"1179","line":300,"column":9,"nodeType":"929","messageId":"1180","endLine":300,"endColumn":22},{"ruleId":"1181","severity":2,"message":"1182","line":300,"column":37,"nodeType":"1176","fix":"1183"},{"ruleId":"1178","severity":2,"message":"1184","line":300,"column":37,"nodeType":"929","messageId":"1180","endLine":300,"endColumn":49,"fix":"1185"},{"ruleId":"1080","severity":2,"message":"1081","line":340,"column":9,"nodeType":"971","endLine":340,"endColumn":37},{"ruleId":"924","severity":1,"message":"925","line":345,"column":9,"nodeType":"923","messageId":"926","endLine":345,"endColumn":20},{"ruleId":"1080","severity":2,"message":"1081","line":390,"column":9,"nodeType":"971","endLine":391,"endColumn":24},{"ruleId":"924","severity":1,"message":"925","line":396,"column":9,"nodeType":"923","messageId":"926","endLine":396,"endColumn":20},{"ruleId":"1057","severity":2,"message":"1058","line":9,"column":7,"nodeType":"1022","endLine":9,"endColumn":27,"fix":"1186"},{"ruleId":"927","severity":2,"message":"1060","line":9,"column":7,"nodeType":"929","endLine":9,"endColumn":13},{"ruleId":"1109","severity":2,"message":"1110","line":23,"column":25,"nodeType":"979","messageId":"926","endLine":23,"endColumn":68},{"ruleId":"1067","severity":2,"message":"1068","line":41,"column":13,"nodeType":"956","messageId":"1069","endLine":41,"endColumn":17,"fix":"1187"},{"ruleId":"927","severity":2,"message":"1188","line":41,"column":13,"nodeType":"929","endLine":41,"endColumn":17},{"ruleId":"1067","severity":2,"message":"1068","line":47,"column":14,"nodeType":"956","messageId":"1069","endLine":47,"endColumn":17,"fix":"1189"},{"ruleId":"910","severity":2,"message":"1190","line":7,"column":1,"nodeType":"912","endLine":7,"endColumn":36,"fix":"1191"},{"ruleId":"927","severity":2,"message":"1056","line":7,"column":10,"nodeType":"929","endLine":7,"endColumn":18},{"ruleId":"1057","severity":2,"message":"1058","line":11,"column":7,"nodeType":"1022","endLine":11,"endColumn":27,"fix":"1192"},{"ruleId":"927","severity":2,"message":"1060","line":11,"column":7,"nodeType":"929","endLine":11,"endColumn":13},{"ruleId":"1109","severity":2,"message":"1110","line":25,"column":27,"nodeType":"979","messageId":"926","endLine":25,"endColumn":60},{"ruleId":"1109","severity":2,"message":"1110","line":31,"column":25,"nodeType":"979","messageId":"926","endLine":31,"endColumn":70},{"ruleId":"1067","severity":2,"message":"1068","line":52,"column":13,"nodeType":"956","messageId":"1069","endLine":52,"endColumn":17,"fix":"1193"},{"ruleId":"927","severity":2,"message":"1188","line":52,"column":13,"nodeType":"929","endLine":52,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":53,"column":9,"nodeType":"971","endLine":55,"endColumn":27},{"ruleId":"1067","severity":2,"message":"1068","line":64,"column":13,"nodeType":"956","messageId":"1069","endLine":64,"endColumn":17,"fix":"1194"},{"ruleId":"927","severity":2,"message":"1188","line":64,"column":13,"nodeType":"929","endLine":64,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":65,"column":9,"nodeType":"971","endLine":67,"endColumn":27},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"1057","severity":2,"message":"1058","line":8,"column":7,"nodeType":"1022","endLine":8,"endColumn":27,"fix":"1195"},{"ruleId":"1101","severity":2,"message":"1102","line":9,"column":1,"nodeType":"912","endLine":9,"endColumn":67,"fix":"1196"},{"ruleId":"1101","severity":2,"message":"1102","line":10,"column":1,"nodeType":"912","endLine":10,"endColumn":32,"fix":"1197"},{"ruleId":"910","severity":2,"message":"1198","line":10,"column":1,"nodeType":"912","endLine":10,"endColumn":32,"fix":"1199"},{"ruleId":"927","severity":2,"message":"930","line":24,"column":14,"nodeType":"929","endLine":24,"endColumn":17},{"ruleId":"927","severity":2,"message":"930","line":32,"column":14,"nodeType":"929","endLine":32,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":49,"column":9,"nodeType":"971","endLine":49,"endColumn":34},{"ruleId":"927","severity":2,"message":"930","line":57,"column":14,"nodeType":"929","endLine":57,"endColumn":17},{"ruleId":"989","severity":2,"message":"990","line":70,"column":19,"nodeType":"991","endLine":70,"endColumn":20},{"ruleId":"989","severity":2,"message":"990","line":70,"column":26,"nodeType":"991","endLine":70,"endColumn":27},{"ruleId":"927","severity":2,"message":"930","line":76,"column":14,"nodeType":"929","endLine":76,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":79,"column":13,"nodeType":"971","endLine":79,"endColumn":34},{"ruleId":"927","severity":2,"message":"1200","line":86,"column":11,"nodeType":"929","endLine":86,"endColumn":16},{"ruleId":"981","severity":2,"message":"1201","line":87,"column":14,"nodeType":"929","endLine":87,"endColumn":19},{"ruleId":"1080","severity":2,"message":"1081","line":88,"column":9,"nodeType":"971","endLine":88,"endColumn":31},{"ruleId":"927","severity":2,"message":"930","line":96,"column":14,"nodeType":"929","endLine":96,"endColumn":17},{"ruleId":"927","severity":2,"message":"930","line":98,"column":14,"nodeType":"929","endLine":98,"endColumn":17},{"ruleId":"1080","severity":2,"message":"1081","line":100,"column":9,"nodeType":"971","endLine":100,"endColumn":39},{"ruleId":"1101","severity":2,"message":"1102","line":9,"column":1,"nodeType":"912","endLine":9,"endColumn":73,"fix":"1202"},{"ruleId":"1101","severity":2,"message":"1102","line":10,"column":1,"nodeType":"912","endLine":10,"endColumn":67,"fix":"1203"},{"ruleId":"921","severity":2,"message":"993","line":35,"column":5,"nodeType":"923","endLine":35,"endColumn":28},{"ruleId":"1080","severity":2,"message":"1081","line":39,"column":7,"nodeType":"971","endLine":41,"endColumn":36},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":9,"column":41},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"1057","severity":2,"message":"1058","line":9,"column":7,"nodeType":"1022","endLine":9,"endColumn":27,"fix":"1204"},{"ruleId":"927","severity":2,"message":"1060","line":9,"column":7,"nodeType":"929","endLine":9,"endColumn":13},{"ruleId":"1205","severity":2,"message":"1206","line":12,"column":6,"nodeType":"991","endLine":12,"endColumn":63},{"ruleId":"927","severity":2,"message":"1207","line":13,"column":11,"nodeType":"929","endLine":13,"endColumn":13},{"ruleId":"927","severity":2,"message":"1207","line":30,"column":11,"nodeType":"929","endLine":30,"endColumn":13},{"ruleId":"927","severity":2,"message":"1053","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":13},{"ruleId":"1057","severity":2,"message":"1058","line":10,"column":7,"nodeType":"1022","endLine":10,"endColumn":27,"fix":"1208"},{"ruleId":"927","severity":2,"message":"1060","line":10,"column":7,"nodeType":"929","endLine":10,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"909","line":17,"column":41},{"ruleId":"927","severity":2,"message":"1209","line":4,"column":8,"nodeType":"929","endLine":4,"endColumn":14},{"ruleId":"981","severity":2,"message":"1210","line":6,"column":33,"nodeType":"929","endLine":6,"endColumn":39},{"ruleId":"974","severity":2,"message":"975","line":22,"column":21,"nodeType":"976","messageId":"926","endLine":22,"endColumn":23},{"ruleId":"927","severity":2,"message":"1211","line":26,"column":15,"nodeType":"929","endLine":26,"endColumn":21},{"ruleId":"927","severity":2,"message":"1212","line":27,"column":15,"nodeType":"929","endLine":27,"endColumn":26},{"ruleId":"924","severity":1,"message":"925","line":18,"column":5,"nodeType":"923","messageId":"926","endLine":18,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":20,"column":5,"nodeType":"923","messageId":"926","endLine":20,"endColumn":16},{"ruleId":"937","severity":2,"message":"1213","line":27,"column":18,"nodeType":"929","messageId":"939","endLine":27,"endColumn":30},{"ruleId":"1095","severity":2,"message":"1214","line":34,"column":9,"nodeType":"929","messageId":"1097","endLine":34,"endColumn":15},"max-len","This line has a length of 105. Maximum allowed is 100.","Program","max","Parsing error: Unexpected reserved word","import/order","`util` import should occur before import of `./bot-api/telegram`","ImportDeclaration",{"range":"1215","text":"1216"},"func-names","Unexpected unnamed function.","FunctionExpression","unnamed","no-new-wrappers","Do not use String as a constructor.","NewExpression","no-underscore-dangle","Unexpected dangling '_' in '_id'.","MemberExpression","no-console","Unexpected console statement.","unexpected","no-unused-vars","'startDate' is assigned a value but never used.","Identifier","'res' is defined but never used.","'date' is defined but never used.","'options' is defined but never used.","Parsing error: Unexpected token ...","no-multiple-empty-lines","Too many blank lines at the end of file. Max of 0 allowed.",{"range":"1217","text":"1218"},"camelcase","Identifier 'chat_id' is not in camel case.","notCamelCase","Identifier 'hook_url' is not in camel case.","'options' is assigned a value but never used.","Identifier 'callback_query_id' is not in camel case.","Identifier 'file_id' is not in camel case.","Unexpected dangling '_' in '_telegram'.","Unexpected dangling '_' in '_auctionManager'.","Unexpected dangling '_' in '_helper'.","Unexpected dangling '_' in '_propertyInfo'.","consistent-return","Expected to return a value at the end of method 'execute'.","missingReturn","Unexpected dangling '_' in '_responses'.","Unexpected dangling '_' in '_sendMessageToSubscriber'.","'auction' is defined but never used.","MethodDefinition","Expected to return a value at the end of arrow function.","ArrowFunctionExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Unexpected dangling '_' in '_makeTelegramAnswer'.","Unexpected dangling '_' in '_warnSubscribers'.","no-unreachable","Unreachable code.","BreakStatement","'err' is defined but never used.","Unexpected dangling '_' in '_auctionPageUrl'.","'params' is defined but never used.","semi","Missing semicolon.","ExpressionStatement",{"range":"1219","text":"1220"},"This line has a length of 101. Maximum allowed is 100.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","radix","Missing radix parameter.","CallExpression","This line has a length of 119. Maximum allowed is 100.","no-shadow","'res' is already declared in the upper scope.","'isNull' is assigned a value but never used.","Identifier 'mongo_db_name' is not in camel case.","comma-dangle","Unexpected trailing comma.","Property",{"range":"1221","text":"1218"},"no-useless-escape","Unnecessary escape character: \\'.","Literal","Unexpected dangling '_' in '_getCommand'.","Unexpected dangling '_' in '_executeCommand'.","no-prototype-builtins","Do not access Object.prototype method 'hasOwnProperty' from target object.","Identifier 'bot_cmd' is not in camel case.","This line has a length of 107. Maximum allowed is 100.","This line has a length of 102. Maximum allowed is 100.","'auc' is defined but never used.","'x' is defined but never used.","Unexpected dangling '_' in '_handleAgeMessage'.","FunctionDeclaration","no-use-before-define","'_sendMessageToSubscribers' was used before it was defined.","Unexpected dangling '_' in '_sendMessageToSubscribers'.","'auctionConsts' is defined but never used.","Unexpected dangling '_' in '_i18n'.","Unexpected dangling '_' in '_closeAuctionUrl'.","Unexpected dangling '_' in '_cipherPassword'.","Unexpected dangling '_' in '_auctionProvider'.","'date' is already declared in the upper scope.","This line has a length of 104. Maximum allowed is 100.","no-param-reassign","Assignment to function parameter 'value'.","Unexpected dangling '_' in '_timerTicks'.","Unexpected dangling '_' in '_timedFunctions'.","Unexpected dangling '_' in '_job'.","Unexpected dangling '_' in '_timerFunc'.","no-plusplus","Unary operator '++' used.","UpdateExpression","VariableDeclarator","Unexpected dangling '_' in '_userManager'.","Identifier 'client_id' is not in camel case.","Identifier 'client_secret' is not in camel case.","Identifier 'create_payment_json' is not in camel case.","'request' is defined but never used.","import/no-named-as-default","Parse errors in imported module './auction-provider': Line 23: Unexpected token ... (23:45)","import/no-named-as-default-member","no-useless-constructor","Useless constructor.","no-empty-function","Unexpected empty constructor.","Unexpected dangling '_' in '_userProvider'.","import/prefer-default-export","Prefer default export.","ExportNamedDeclaration","'err' is already declared in the upper scope.","'r' is already declared in the upper scope.","class-methods-use-this","Expected 'this' to be used by class method 'encrypt'.","missingThis","Expected 'this' to be used by class method 'decrypt'.","Unexpected dangling '_' in '_localizers'.","Unexpected dangling '_' in '_buildKey'.","Unexpected dangling '_' in '_extractTypeInfo'.","Unexpected dangling '_' in '_localize'.","Unexpected dangling '_' in '_buildMessage'.","Expected 'this' to be used by class method '_extractTypeInfo'.","Expected 'this' to be used by class method '_buildKey'.","Expected 'this' to be used by class method '_buildMessage'.","'sinon' is defined but never used.","`mongodb` import should occur before import of `./storage-provivider-test-extensions`",{"range":"1222","text":"1223"},"'ObjectID' is defined but never used.","prefer-destructuring","Use object destructuring.",{"range":"1224","text":"1225"},"'expect' is assigned a value but never used.","function-paren-newline","Unexpected newline before ')'.","Punctuator","unexpectedBefore",{"range":"1226","text":"1218"},"'db' is defined but never used.","arrow-parens","Expected parentheses around arrow function argument.","expectedParens",{"range":"1227","text":"1228"},{"range":"1229","text":"1228"},{"range":"1230","text":"1231"},{"range":"1232","text":"1228"},{"range":"1233","text":"1228"},{"range":"1234","text":"1231"},{"range":"1235","text":"1228"},{"range":"1236","text":"1228"},{"range":"1237","text":"1231"},{"range":"1238","text":"1228"},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.",{"range":"1239","text":"1240"},{"range":"1241","text":"1228"},{"range":"1242","text":"1225"},{"range":"1243","text":"1218"},"'r' is defined but never used.",{"range":"1244","text":"1245"},{"range":"1246","text":"1228"},"import/named","messageBuilder not found in '../../../bot-api/msg-builder'","photoBuilder not found in '../../../bot-api/msg-builder'",{"range":"1247","text":"1225"},"Unexpected unnamed function 'should'.","'chai' is defined but never used.","no-undef","'done' is not defined.","undef","`mongodb` import should occur before import of `../../../../services/domain/auction-manager`",{"range":"1248","text":"1249"},{"range":"1250","text":"1225"},"import/first","Import in body of module; reorder to top.",{"range":"1251","text":"1252"},"Expected newline before ')'.","expectedBefore",{"range":"1253","text":"1254"},"import/extensions","Unexpected use of file extension \"js\" for \"../../../../commands/callbackquery/start-auction.cmd.js\"","global-require","Unexpected require().",{"range":"1255","text":"1254"},{"range":"1256","text":"1257"},{"range":"1258","text":"1254"},{"range":"1259","text":"1257"},"`mongodb` import should occur before import of `../../../../commands/command-helper`",{"range":"1260","text":"1261"},{"range":"1262","text":"1225"},{"range":"1263","text":"1264"},{"range":"1265","text":"1257"},{"range":"1266","text":"1254"},{"range":"1267","text":"1225"},{"range":"1268","text":"1269"},"'managerFactory' is assigned a value but never used.",{"range":"1270","text":"1225"},{"range":"1271","text":"1272"},"object-curly-newline","Unexpected line break after this opening brace.","ObjectExpression",{"range":"1273","text":"1218"},{"range":"1274","text":"1275"},{"range":"1276","text":"1254"},"`mongodb` import should occur before import of `../../../../commands/consts`",{"range":"1277","text":"1278"},{"range":"1279","text":"1225"},{"range":"1280","text":"1281"},"'data' is defined but never used.",{"range":"1282","text":"1278"},{"range":"1283","text":"1225"},{"range":"1284","text":"1285"},{"range":"1286","text":"1278"},{"range":"1287","text":"1225"},{"range":"1288","text":"1289"},"'title' is defined but never used.","'auctionId' is defined but never used.","'obj' is defined but never used.","Expected a line break after this opening brace.",{"range":"1290","text":"1254"},"Expected a line break before this closing brace.",{"range":"1291","text":"1254"},{"range":"1292","text":"1278"},{"range":"1293","text":"1225"},{"range":"1294","text":"1295"},"'url' is defined but never used.",{"range":"1296","text":"1278"},{"range":"1297","text":"1225"},{"range":"1298","text":"1299"},{"range":"1300","text":"1225"},{"range":"1301","text":"1225"},{"range":"1302","text":"1257"},{"range":"1303","text":"1228"},{"range":"1304","text":"1225"},{"range":"1305","text":"1228"},"'fs' is defined but never used.","import/no-duplicates","'/Users/guglielmino/Sources/my/astone-bot/server/services/domain/auction-manager.js' imported multiple times.",{"range":"1306","text":"1307"},"`mongodb` import should occur before import of `../../../services/domain/auction-manager`",{"range":"1308","text":"1309"},{"range":"1310","text":"1225"},"This line has a length of 108. Maximum allowed is 100.","no-multi-assign","Unexpected chained assignment.","AssignmentExpression","one-var","Split 'let' declarations into multiple statements.","VariableDeclaration",{"range":"1311","text":"1312"},"prefer-const","'oneMinutesAgo' is never reassigned. Use 'const' instead.","useConst","one-var-declaration-per-line","Expected variable declaration to be on a new line.",{"range":"1313","text":"1254"},"'tenSeconsAgo' is never reassigned. Use 'const' instead.",{"range":"1314","text":"1315"},{"range":"1316","text":"1225"},{"range":"1317","text":"1318"},"'sent' is defined but never used.",{"range":"1319","text":"1228"},"`mongodb` import should occur before import of `../../../../services/domain/notifications/auction-start-notification`",{"range":"1320","text":"1321"},{"range":"1322","text":"1225"},{"range":"1323","text":"1318"},{"range":"1324","text":"1318"},{"range":"1325","text":"1225"},{"range":"1326","text":"1218"},{"range":"1327","text":"1328"},"`redis-mock` import should occur before import of `../../../../services/bot/state-manager`",{"range":"1329","text":"1330"},"'exist' is assigned a value but never used.","'exist' is already declared in the upper scope.",{"range":"1331","text":"1218"},{"range":"1332","text":"1333"},{"range":"1334","text":"1225"},"no-template-curly-in-string","Unexpected template string expression.","'en' is assigned a value but never used.",{"range":"1335","text":"1225"},"'logger' is defined but never used.","'logger' is already declared in the upper scope.","'pageID' is assigned a value but never used.","'timeOfEvent' is assigned a value but never used.","Identifier 'redirect_url' is not in camel case.","'logger' is not defined.",[84,371],"import util from 'util';\nimport Telegram from './bot-api/telegram';\nimport config from './config';\nimport StorageProvider from './services/storage/mongodb';\nimport ManagerFactory from './services/domain/manager-factory';\nimport AuctionApprover from './services/domain/auction-approver';\n",[1113,1114],"",[2095,2095],";",[800,801],[67,171],"import { ObjectID } from 'mongodb';\nimport StorageProvider from './storage-provivider-test-extensions';\n",[257,277],"{expect} = chai",[542,549],[611,614],"(err)",[929,932],[1048,1056],"(auctions)",[1228,1231],[1486,1489],[1605,1613],[1784,1787],[1984,1987],[2096,2104],[2216,2219],[2663,2670],"(auction)",[2777,2780],[157,177],[439,446],[817,822],"(users)",[918,921],[167,187],[67,178],"import { ObjectID } from 'mongodb';\nimport { BidResponse } from '../../../../services/domain/auction-manager';\n",[265,285],[0,356],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { BidResponse } from '../../../../services/domain/auction-manager';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\n\nimport BidCommand from '../../../../commands/callbackquery/bid.cmd';\n\nchai.should();\nconst expect = chai.expect;",[3413,3413],"\n",[1351,1351],[1365,1368],"(res)",[2973,2973],[2987,2990],[67,168],"import { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\n",[190,210],[0,296],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionListCommand from '../../../../commands/interactive/auction-list.cmd';\n\nchai.should();\nconst expect = chai.expect;",[1773,1776],[1875,1875],[248,268],[0,352],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\nimport * as constants from '../../../../commands/consts';\n\nimport NewAuctionCommand from '../../../../commands/interactive/new-auction.cmd';\n\nchai.should();\nconst expect = chai.expect;",[248,268],[0,359],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport { ObjectID } from 'mongodb';\nimport CommandHelper from '../../../../commands/command-helper';\nimport * as constants from '../../../../commands/consts';\n\nimport SetTitleCommand from '../../../../commands/interactive/set-auction-property.cmd';\n\nchai.should();\nconst expect = chai.expect;",[821,828],[1690,1695],"(value)",[1811,1811],[67,226],"import { ObjectID } from 'mongodb';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\n",[248,268],[0,362],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionDescriptionCommand from '../../../../commands/state/auction-description.cmd';\n\nchai.should();\nconst expect = chai.expect;",[67,226],[248,268],[0,361],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionMinSubscribersCommand from '../../../../commands/state/auction-min-sub.cmd';\n\nchai.should();\nconst expect = chai.expect;",[67,226],[248,268],[0,348],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionNameCommand from '../../../../commands/state/auction-name.cmd';\n\nchai.should();\nconst expect = chai.expect;",[1512,1512],[1600,1600],[67,226],[248,268],[0,354],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionPictureCommand from '../../../../commands/state/auction-picture.cmd';\n\nchai.should();\nconst expect = chai.expect;",[67,226],[248,268],[0,350],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport * as constants from '../../../../commands/consts';\nimport CommandHelper from '../../../../commands/command-helper';\nimport { ObjectID } from 'mongodb';\n\nimport AuctionPriceCommand from '../../../../commands/state/auction-price.cmd';\n\nchai.should();\nconst expect = chai.expect;",[241,261],[248,268],[1060,1063],[1234,1237],[243,263],[1567,1570],[94,230]," { BidResponse } from AuctionManager from '../../../services/domain/auction-manager';\n",[88,267],"import { ObjectID } from 'mongodb';\nimport AuctionManager from '../../../services/domain/auction-manager';\nimport { BidResponse } from '../../../services/domain/auction-manager';\n",[353,373],[9281,9282],"; let",[9283,9283],[9251,9254],"const",[258,278],[1035,1039],"(sent)",[1164,1167],[67,213],"import { ObjectID } from 'mongodb';\nimport AuctionStartNotification from '../../../../services/domain/notifications/auction-start-notification';\n\n",[299,319],[1248,1252],[1553,1557],[90,110],[178,178],[0,210],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport StateManager from '../../../../services/bot/state-manager';\nimport redis from 'redis-mock';\n\nchai.should();\n\nconst expect = chai.expect;",[112,211],"import redis from 'redis-mock';\nimport StateManager from '../../../../services/bot/state-manager';\n",[188,188],[0,255],"'use strict';\n\nimport chai from 'chai';\nimport sinon from 'sinon';\nimport redis from 'redis-mock';\n\nimport TelegramChatter from '../../../../services/bot/telegram-chatter';\nimport StateManager from '../../../../services/bot/state-manager';\n\nchai.should();",[211,231],[220,240]]